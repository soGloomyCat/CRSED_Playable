["#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat10;\nmediump float u_xlat16_23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat7.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat7.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat7.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_8.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_8.x = u_xlat16_8.x + u_xlat16_8.x;\n    u_xlat16_8.xyz = u_xlat7.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_8.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat10 = u_xlat3.x;\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat7.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_4.xyz = u_xlat7.xxx * _LightColor0.xyz;\n    u_xlat7.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = u_xlat7.x * u_xlat7.x;\n    u_xlat3.x = u_xlat7.x * u_xlat7.x;\n    u_xlat16_23 = (-u_xlat10) + 1.0;\n    u_xlat7.x = u_xlat16_23 * u_xlat16_23;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat16_23 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_25 = (-u_xlat16_23) + 1.0;\n    u_xlat16_25 = u_xlat0.x + u_xlat16_25;\n    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat10_0.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.xyz = vec3(u_xlat16_25) + (-u_xlat16_5.xyz);\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat7.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat7.x = u_xlat7.x * 16.0;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat7.xxx;\n    u_xlat16_5.xyz = u_xlat0.xzw * vec3(u_xlat16_23) + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat12;\nmediump float u_xlat16_29;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat9.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat9.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat9.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat9.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat16_4.xyz = vec3(u_xlat10_3) * vs_TEXCOORD5.xyz;\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat12 = u_xlat3.x;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat9.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat9.xxx * _LightColor0.xyz;\n    u_xlat9.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = u_xlat9.x * u_xlat9.x;\n    u_xlat3.x = u_xlat9.x * u_xlat9.x;\n    u_xlat16_29 = (-u_xlat12) + 1.0;\n    u_xlat9.x = u_xlat16_29 * u_xlat16_29;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_29) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_0.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_29) * u_xlat0.xzw;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = u_xlat9.xxx * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat14;\nmediump float u_xlat16_23;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat7.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat7.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat7.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_8.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_8.x = u_xlat16_8.x + u_xlat16_8.x;\n    u_xlat16_8.xyz = u_xlat7.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_8.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat10 = u_xlat3.x;\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat7.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat14 = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat14 = u_xlat14 * u_xlat14;\n    u_xlat3.x = u_xlat14 * u_xlat14;\n    u_xlat16_23 = (-u_xlat10) + 1.0;\n    u_xlat14 = u_xlat16_23 * u_xlat16_23;\n    u_xlat14 = u_xlat16_23 * u_xlat14;\n    u_xlat14 = u_xlat16_23 * u_xlat14;\n    u_xlat16_23 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.x = (-u_xlat16_23) + 1.0;\n    u_xlat16_4.x = u_xlat0.x + u_xlat16_4.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_11.xyz = _Color.xyz * u_xlat10_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_11.xyz) + u_xlat16_4.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat14) * u_xlat16_6.xyz + u_xlat16_11.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat0.xxx;\n    u_xlat16_4.xyz = u_xlat5.xyz * vec3(u_xlat16_23) + u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_6.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat10;\nmediump float u_xlat16_23;\nmediump float u_xlat16_25;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat7.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat7.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat7.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_8.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_8.x = u_xlat16_8.x + u_xlat16_8.x;\n    u_xlat16_8.xyz = u_xlat7.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_8.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat10 = u_xlat3.x;\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat7.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat16_4.xyz = u_xlat7.xxx * _LightColor0.xyz;\n    u_xlat7.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = u_xlat7.x * u_xlat7.x;\n    u_xlat3.x = u_xlat7.x * u_xlat7.x;\n    u_xlat16_23 = (-u_xlat10) + 1.0;\n    u_xlat7.x = u_xlat16_23 * u_xlat16_23;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat7.x = u_xlat16_23 * u_xlat7.x;\n    u_xlat16_23 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_25 = (-u_xlat16_23) + 1.0;\n    u_xlat16_25 = u_xlat0.x + u_xlat16_25;\n    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat10_0.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.xyz = vec3(u_xlat16_25) + (-u_xlat16_5.xyz);\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat7.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat7.x = u_xlat7.x * 16.0;\n    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat7.xxx;\n    u_xlat16_5.xyz = u_xlat0.xzw * vec3(u_xlat16_23) + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat16_3.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_3.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_3.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_4.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_4.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_4.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_3.xyz = unity_SHC.xyz * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_3.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_29;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat9.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat9.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat9.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat9.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat16_4.xyz = vec3(u_xlat10_3) * vs_TEXCOORD5.xyz;\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat12 = u_xlat3.x;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat9.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat18 = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat18 = u_xlat18 * u_xlat18;\n    u_xlat3.x = u_xlat18 * u_xlat18;\n    u_xlat16_29 = (-u_xlat12) + 1.0;\n    u_xlat18 = u_xlat16_29 * u_xlat16_29;\n    u_xlat18 = u_xlat16_29 * u_xlat18;\n    u_xlat18 = u_xlat16_29 * u_xlat18;\n    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_29) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_29) * u_xlat5.xyz;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat18) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_6.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat9.xxx * u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4 + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n    u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat12;\nmediump float u_xlat16_29;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat9.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat9.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat9.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat9.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat16_4.xyz = vec3(u_xlat10_3) * vs_TEXCOORD5.xyz;\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat12 = u_xlat3.x;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat9.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat9.xxx * _LightColor0.xyz;\n    u_xlat9.x = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = u_xlat9.x * u_xlat9.x;\n    u_xlat3.x = u_xlat9.x * u_xlat9.x;\n    u_xlat16_29 = (-u_xlat12) + 1.0;\n    u_xlat9.x = u_xlat16_29 * u_xlat16_29;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat9.x = u_xlat16_29 * u_xlat9.x;\n    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_29) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_0.xzw = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_0.xzw + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat0.xzw = u_xlat10_0.xzw * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_29) * u_xlat0.xzw;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = u_xlat9.xxx * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat14;\nmediump float u_xlat16_23;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat7.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat7.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat7.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_8.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_8.x = u_xlat16_8.x + u_xlat16_8.x;\n    u_xlat16_8.xyz = u_xlat7.xyz * (-u_xlat16_8.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_8.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat10 = u_xlat3.x;\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat7.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat14 = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat14 = u_xlat14 * u_xlat14;\n    u_xlat3.x = u_xlat14 * u_xlat14;\n    u_xlat16_23 = (-u_xlat10) + 1.0;\n    u_xlat14 = u_xlat16_23 * u_xlat16_23;\n    u_xlat14 = u_xlat16_23 * u_xlat14;\n    u_xlat14 = u_xlat16_23 * u_xlat14;\n    u_xlat16_23 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.x = (-u_xlat16_23) + 1.0;\n    u_xlat16_4.x = u_xlat0.x + u_xlat16_4.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_11.xyz = _Color.xyz * u_xlat10_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_11.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_11.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_11.xyz) + u_xlat16_4.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat14) * u_xlat16_6.xyz + u_xlat16_11.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat16_11.xyz * u_xlat0.xxx;\n    u_xlat16_4.xyz = u_xlat5.xyz * vec3(u_xlat16_23) + u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_6.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nfloat u_xlat9;\nlowp float u_xlat10_9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat16;\nlowp float u_xlat10_24;\nfloat u_xlat25;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0) + 1.0;\n    u_xlat1.z = (-u_xlat0) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat8.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat8.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat8.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_9 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_9) * u_xlat16_3.xyz;\n    u_xlat9 = dot((-vs_TEXCOORD1.xyz), u_xlat8.xyz);\n    u_xlat25 = u_xlat9;\n    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);\n    u_xlat9 = u_xlat9 + u_xlat9;\n    u_xlat4.xyz = u_xlat8.xyz * (-vec3(u_xlat9)) + (-vs_TEXCOORD1.xyz);\n    u_xlat8.x = dot(u_xlat8.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat8.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8.x = u_xlat8.x * u_xlat8.x;\n    u_xlat1.x = u_xlat8.x * u_xlat8.x;\n    u_xlat8.x = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat8.x = u_xlat8.x * 16.0;\n    u_xlat16_27 = (-u_xlat25) + 1.0;\n    u_xlat16 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16 = u_xlat16_27 * u_xlat16;\n    u_xlat16 = u_xlat16_27 * u_xlat16;\n    u_xlat10_24 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_27 = (-u_xlat10_24) * 0.779083729 + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29 = u_xlat0 + u_xlat16_29;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_24) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat16) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat8.xxx * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat1.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nvec3 u_xlat10;\nfloat u_xlat11;\nlowp float u_xlat10_11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat20;\nlowp float u_xlat10_30;\nfloat u_xlat31;\nmediump float u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0) + 1.0;\n    u_xlat1.z = (-u_xlat0) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat10.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat10.x = inversesqrt(u_xlat10.x);\n    u_xlat10.xyz = u_xlat10.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz, u_xlat10.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n    u_xlat16_12.xyz = u_xlat10.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_11 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_11) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat10_11) * vs_TEXCOORD5.xyz;\n    u_xlat11 = dot((-vs_TEXCOORD1.xyz), u_xlat10.xyz);\n    u_xlat31 = u_xlat11;\n    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);\n    u_xlat11 = u_xlat11 + u_xlat11;\n    u_xlat5.xyz = u_xlat10.xyz * (-vec3(u_xlat11)) + (-vs_TEXCOORD1.xyz);\n    u_xlat10.x = dot(u_xlat10.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10.x = clamp(u_xlat10.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat10.xxx * _LightColor0.xyz;\n    u_xlat10.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10.x = u_xlat10.x * u_xlat10.x;\n    u_xlat1.x = u_xlat10.x * u_xlat10.x;\n    u_xlat10.x = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat10.x = u_xlat10.x * 16.0;\n    u_xlat16_33 = (-u_xlat31) + 1.0;\n    u_xlat20 = u_xlat16_33 * u_xlat16_33;\n    u_xlat20 = u_xlat16_33 * u_xlat20;\n    u_xlat20 = u_xlat16_33 * u_xlat20;\n    u_xlat10_30 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_33 = (-u_xlat10_30) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n    u_xlat16_34 = u_xlat0 + u_xlat16_34;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_33) * u_xlat1.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_30) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat20) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat10.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nlowp vec3 u_xlat10_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_12;\nfloat u_xlat14;\nfloat u_xlat21;\nfloat u_xlat22;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat1.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat7.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_8.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_8.xxx * u_xlat16_3.xyz;\n    u_xlat8.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat22 = u_xlat8.x;\n    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);\n    u_xlat8.x = u_xlat8.x + u_xlat8.x;\n    u_xlat4.xyz = u_xlat7.xyz * (-u_xlat8.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat14 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat14 = u_xlat14 * u_xlat14;\n    u_xlat1.x = u_xlat14 * u_xlat14;\n    u_xlat14 = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat14 = u_xlat14 * 16.0;\n    u_xlat16_24 = (-u_xlat22) + 1.0;\n    u_xlat21 = u_xlat16_24 * u_xlat16_24;\n    u_xlat21 = u_xlat16_24 * u_xlat21;\n    u_xlat21 = u_xlat16_24 * u_xlat21;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_24 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_24) + 1.0;\n    u_xlat16_5.x = u_xlat0.x + u_xlat16_5.x;\n    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_8.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_12.xyz = _Color.xyz * u_xlat10_8.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat8.xyz = u_xlat10_8.xyz * _Color.xyz;\n    u_xlat16_12.xyz = vec3(u_xlat10_1) * u_xlat16_12.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_12.xyz) + u_xlat16_5.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat21) * u_xlat16_6.xyz + u_xlat16_12.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat14) * u_xlat16_12.xyz;\n    u_xlat16_5.xyz = u_xlat8.xyz * vec3(u_xlat16_24) + u_xlat16_5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_6.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nfloat u_xlat9;\nlowp float u_xlat10_9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat16;\nlowp float u_xlat10_24;\nfloat u_xlat25;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0) + 1.0;\n    u_xlat1.z = (-u_xlat0) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat8.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat8.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat8.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_9 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_9) * u_xlat16_3.xyz;\n    u_xlat9 = dot((-vs_TEXCOORD1.xyz), u_xlat8.xyz);\n    u_xlat25 = u_xlat9;\n    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);\n    u_xlat9 = u_xlat9 + u_xlat9;\n    u_xlat4.xyz = u_xlat8.xyz * (-vec3(u_xlat9)) + (-vs_TEXCOORD1.xyz);\n    u_xlat8.x = dot(u_xlat8.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat8.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8.x = u_xlat8.x * u_xlat8.x;\n    u_xlat1.x = u_xlat8.x * u_xlat8.x;\n    u_xlat8.x = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat8.x = u_xlat8.x * 16.0;\n    u_xlat16_27 = (-u_xlat25) + 1.0;\n    u_xlat16 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16 = u_xlat16_27 * u_xlat16;\n    u_xlat16 = u_xlat16_27 * u_xlat16;\n    u_xlat10_24 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_27 = (-u_xlat10_24) * 0.779083729 + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29 = u_xlat0 + u_xlat16_29;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_24) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat16) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat8.xxx * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat1.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat25;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    vs_TEXCOORD1.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    u_xlat2.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat3 = (-u_xlat1.xxxx) + unity_4LightPosX0;\n    u_xlat4 = (-u_xlat1.yyyy) + unity_4LightPosY0;\n    u_xlat5 = u_xlat2.yyyy * u_xlat4;\n    u_xlat4 = u_xlat4 * u_xlat4;\n    u_xlat4 = u_xlat3 * u_xlat3 + u_xlat4;\n    u_xlat3 = u_xlat3 * u_xlat2.xxxx + u_xlat5;\n    u_xlat5 = (-u_xlat1.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1 = u_xlat5 * u_xlat2.zzzz + u_xlat3;\n    u_xlat3 = u_xlat5 * u_xlat5 + u_xlat4;\n    u_xlat3 = max(u_xlat3, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat4 = inversesqrt(u_xlat3);\n    u_xlat3 = u_xlat3 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat3 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat4;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat1 = u_xlat3 * u_xlat1;\n    u_xlat3.xyz = u_xlat1.yyy * unity_LightColor[1].xyz;\n    u_xlat3.xyz = unity_LightColor[0].xyz * u_xlat1.xxx + u_xlat3.xyz;\n    u_xlat1.xyz = unity_LightColor[2].xyz * u_xlat1.zzz + u_xlat3.xyz;\n    u_xlat1.xyz = unity_LightColor[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat16_6.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_6.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_6.x);\n    u_xlat16_3 = u_xlat2.yzzx * u_xlat2.xyzz;\n    u_xlat16_7.x = dot(unity_SHBr, u_xlat16_3);\n    u_xlat16_7.y = dot(unity_SHBg, u_xlat16_3);\n    u_xlat16_7.z = dot(unity_SHBb, u_xlat16_3);\n    u_xlat16_6.xyz = unity_SHC.xyz * u_xlat16_6.xxx + u_xlat16_7.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_7.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_7.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_7.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_6.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz + u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump vec3 u_xlat16_2;\nvec4 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_29;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat0.x = (-_Glossiness) + 1.0;\n    u_xlat9.x = (-u_xlat0.x) + 1.0;\n    u_xlat16_1 = (-u_xlat9.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat9.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat9.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_1);\n    u_xlat16_2.x = u_xlat10_1.w + -1.0;\n    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;\n    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;\n    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;\n    u_xlat10_3 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_3);\n    u_xlat16_4.xyz = vec3(u_xlat10_3) * vs_TEXCOORD5.xyz;\n    u_xlat3.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat12 = u_xlat3.x;\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat3.x = u_xlat3.x + u_xlat3.x;\n    u_xlat3.xzw = u_xlat9.xyz * (-u_xlat3.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat18 = dot(u_xlat3.xzw, _WorldSpaceLightPos0.xyz);\n    u_xlat18 = u_xlat18 * u_xlat18;\n    u_xlat3.x = u_xlat18 * u_xlat18;\n    u_xlat16_29 = (-u_xlat12) + 1.0;\n    u_xlat18 = u_xlat16_29 * u_xlat16_29;\n    u_xlat18 = u_xlat16_29 * u_xlat18;\n    u_xlat18 = u_xlat16_29 * u_xlat18;\n    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_29) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_29) * u_xlat5.xyz;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat18) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;\n    u_xlat16_2.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;\n    u_xlat3.z = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_6.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat9.xxx * u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nfloat u_xlat16;\nmediump float u_xlat16_17;\nlowp float u_xlat10_24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_17 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_17 = min(u_xlat16_17, 1.0);\n    u_xlat16_17 = (-u_xlat16_17) + 1.0;\n    u_xlat16_17 = sqrt(u_xlat16_17);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_17) + u_xlat16_1.xyw;\n    u_xlat16_25 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_25 = u_xlat16_25 + u_xlat16_25;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_25)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0) + 1.0;\n    u_xlat16_25 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_25 = u_xlat16_25 * u_xlat3.z;\n    u_xlat16_25 = u_xlat16_25 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_25);\n    u_xlat16_25 = u_xlat10_2.w + -1.0;\n    u_xlat16_25 = unity_SpecCube0_HDR.w * u_xlat16_25 + 1.0;\n    u_xlat16_25 = u_xlat16_25 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_25);\n    u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_8) * u_xlat16_4.xyz;\n    u_xlat8 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat16 = u_xlat8;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat8 = u_xlat8 + u_xlat8;\n    u_xlat5.xyz = u_xlat16_1.xyz * (-vec3(u_xlat8)) + (-vs_TEXCOORD1.xyz);\n    u_xlat8 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat8) * _LightColor0.xyz;\n    u_xlat8 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 = u_xlat8 * u_xlat8;\n    u_xlat3.x = u_xlat8 * u_xlat8;\n    u_xlat8 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat8 = u_xlat8 * 16.0;\n    u_xlat16_25 = (-u_xlat16) + 1.0;\n    u_xlat16 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16 = u_xlat16_25 * u_xlat16;\n    u_xlat16 = u_xlat16_25 * u_xlat16;\n    u_xlat10_24 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_25 = (-u_xlat10_24) * 0.779083729 + 0.779083729;\n    u_xlat16_28 = (-u_xlat16_25) + 1.0;\n    u_xlat16_28 = u_xlat0 + u_xlat16_28;\n    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_24) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_28) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat16) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat8) * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat3.xyz * vec3(u_xlat16_25) + u_xlat16_6.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_1.xyz + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nfloat u_xlat9;\nlowp float u_xlat10_9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat16;\nlowp float u_xlat10_24;\nfloat u_xlat25;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat1.z = (-u_xlat0) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat8.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat8.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat8.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_9 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_9) * u_xlat16_3.xyz;\n    u_xlat9 = dot((-vs_TEXCOORD1.xyz), u_xlat8.xyz);\n    u_xlat25 = u_xlat9;\n    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);\n    u_xlat9 = u_xlat9 + u_xlat9;\n    u_xlat4.xyz = u_xlat8.xyz * (-vec3(u_xlat9)) + (-vs_TEXCOORD1.xyz);\n    u_xlat8.x = dot(u_xlat8.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat8.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8.x = u_xlat8.x * u_xlat8.x;\n    u_xlat1.x = u_xlat8.x * u_xlat8.x;\n    u_xlat8.x = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat8.x = u_xlat8.x * 16.0;\n    u_xlat16_27 = (-u_xlat25) + 1.0;\n    u_xlat16 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16 = u_xlat16_27 * u_xlat16;\n    u_xlat16 = u_xlat16_27 * u_xlat16;\n    u_xlat10_24 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_27 = (-u_xlat10_24) * 0.779083729 + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29 = u_xlat0 + u_xlat16_29;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_24) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat16) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat8.xxx * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat1.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_2.x);\n    u_xlat16_0 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_2.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nlowp float u_xlat10_10;\nfloat u_xlat20;\nmediump float u_xlat16_21;\nlowp float u_xlat10_30;\nmediump float u_xlat16_31;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_21 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_21 = min(u_xlat16_21, 1.0);\n    u_xlat16_21 = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = sqrt(u_xlat16_21);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_21) + u_xlat16_1.xyw;\n    u_xlat16_31 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_31 = u_xlat16_31 + u_xlat16_31;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_31)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0) + 1.0;\n    u_xlat16_31 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_31 = u_xlat16_31 * u_xlat3.z;\n    u_xlat16_31 = u_xlat16_31 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_31);\n    u_xlat16_31 = u_xlat10_2.w + -1.0;\n    u_xlat16_31 = unity_SpecCube0_HDR.w * u_xlat16_31 + 1.0;\n    u_xlat16_31 = u_xlat16_31 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_31);\n    u_xlat10_10 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_10) * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_10) * vs_TEXCOORD5.xyz;\n    u_xlat10 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat20 = u_xlat10;\n    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat10 = u_xlat10 + u_xlat10;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat10)) + (-vs_TEXCOORD1.xyz);\n    u_xlat10 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat10) * _LightColor0.xyz;\n    u_xlat10 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10 = u_xlat10 * u_xlat10;\n    u_xlat3.x = u_xlat10 * u_xlat10;\n    u_xlat10 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat10 = u_xlat10 * 16.0;\n    u_xlat16_31 = (-u_xlat20) + 1.0;\n    u_xlat20 = u_xlat16_31 * u_xlat16_31;\n    u_xlat20 = u_xlat16_31 * u_xlat20;\n    u_xlat20 = u_xlat16_31 * u_xlat20;\n    u_xlat10_30 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_31 = (-u_xlat10_30) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_31) + 1.0;\n    u_xlat16_34 = u_xlat0 + u_xlat16_34;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_31) * u_xlat3.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_30) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat20) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10) * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_1.xyz + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = u_xlat1.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nlowp float u_xlat10_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat10;\nlowp vec3 u_xlat10_10;\nfloat u_xlat14;\nmediump float u_xlat16_15;\nfloat u_xlat21;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15) + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15) + u_xlat16_1.xyw;\n    u_xlat16_22 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_22 = u_xlat16_22 + u_xlat16_22;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_22)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_22 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_22 = u_xlat16_22 * u_xlat3.z;\n    u_xlat16_22 = u_xlat16_22 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_22);\n    u_xlat16_22 = u_xlat10_2.w + -1.0;\n    u_xlat16_22 = unity_SpecCube0_HDR.w * u_xlat16_22 + 1.0;\n    u_xlat16_22 = u_xlat16_22 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_22);\n    u_xlat10_7 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_7) * u_xlat16_4.xyz;\n    u_xlat7 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat14 = u_xlat7;\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat7 = u_xlat7 + u_xlat7;\n    u_xlat5.xyz = u_xlat16_1.xyz * (-vec3(u_xlat7)) + (-vs_TEXCOORD1.xyz);\n    u_xlat7 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);\n    u_xlat21 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21 = u_xlat21 * u_xlat21;\n    u_xlat3.x = u_xlat21 * u_xlat21;\n    u_xlat21 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat21 = u_xlat21 * 16.0;\n    u_xlat16_1.x = (-u_xlat14) + 1.0;\n    u_xlat14 = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat14 = u_xlat16_1.x * u_xlat14;\n    u_xlat14 = u_xlat16_1.x * u_xlat14;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.x = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_8.x = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_8.x = u_xlat0.x + u_xlat16_8.x;\n    u_xlat16_8.x = clamp(u_xlat16_8.x, 0.0, 1.0);\n    u_xlat10_10.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat10.xyz = u_xlat10_10.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_3) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = u_xlat16_8.xxx + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat14) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat21) * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat10.xyz * u_xlat16_1.xxx + u_xlat16_6.xyz;\n    u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat7) * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat16_3.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_3.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_3.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_4.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_4.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_4.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_3.xyz = unity_SHC.xyz * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_3.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nvec3 u_xlat10;\nlowp vec3 u_xlat10_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat18;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump float u_xlat16_30;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat1.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat9.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_10.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_10.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat10_10.xxx * vs_TEXCOORD5.xyz;\n    u_xlat10.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat28 = u_xlat10.x;\n    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10.x = u_xlat10.x + u_xlat10.x;\n    u_xlat5.xyz = u_xlat9.xyz * (-u_xlat10.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat18 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat18 = u_xlat18 * u_xlat18;\n    u_xlat1.x = u_xlat18 * u_xlat18;\n    u_xlat18 = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat18 = u_xlat18 * 16.0;\n    u_xlat16_30 = (-u_xlat28) + 1.0;\n    u_xlat27 = u_xlat16_30 * u_xlat16_30;\n    u_xlat27 = u_xlat16_30 * u_xlat27;\n    u_xlat27 = u_xlat16_30 * u_xlat27;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_30 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_30) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_10.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat10.xyz = u_xlat10_10.xyz * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat10.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat27) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat9.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nfloat u_xlat16;\nmediump float u_xlat16_17;\nlowp float u_xlat10_24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_17 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_17 = min(u_xlat16_17, 1.0);\n    u_xlat16_17 = (-u_xlat16_17) + 1.0;\n    u_xlat16_17 = sqrt(u_xlat16_17);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_17) + u_xlat16_1.xyw;\n    u_xlat16_25 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_25 = u_xlat16_25 + u_xlat16_25;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_25)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0) + 1.0;\n    u_xlat16_25 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_25 = u_xlat16_25 * u_xlat3.z;\n    u_xlat16_25 = u_xlat16_25 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_25);\n    u_xlat16_25 = u_xlat10_2.w + -1.0;\n    u_xlat16_25 = unity_SpecCube0_HDR.w * u_xlat16_25 + 1.0;\n    u_xlat16_25 = u_xlat16_25 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_25);\n    u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_8) * u_xlat16_4.xyz;\n    u_xlat8 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat16 = u_xlat8;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat8 = u_xlat8 + u_xlat8;\n    u_xlat5.xyz = u_xlat16_1.xyz * (-vec3(u_xlat8)) + (-vs_TEXCOORD1.xyz);\n    u_xlat8 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat8) * _LightColor0.xyz;\n    u_xlat8 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 = u_xlat8 * u_xlat8;\n    u_xlat3.x = u_xlat8 * u_xlat8;\n    u_xlat8 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat8 = u_xlat8 * 16.0;\n    u_xlat16_25 = (-u_xlat16) + 1.0;\n    u_xlat16 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16 = u_xlat16_25 * u_xlat16;\n    u_xlat16 = u_xlat16_25 * u_xlat16;\n    u_xlat10_24 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_25 = (-u_xlat10_24) * 0.779083729 + 0.779083729;\n    u_xlat16_28 = (-u_xlat16_25) + 1.0;\n    u_xlat16_28 = u_xlat0 + u_xlat16_28;\n    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_24) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_28) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat16) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat8) * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat3.xyz * vec3(u_xlat16_25) + u_xlat16_6.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_1.xyz + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4 + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n    u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nvec3 u_xlat10;\nfloat u_xlat11;\nlowp float u_xlat10_11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat20;\nlowp float u_xlat10_30;\nfloat u_xlat31;\nmediump float u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0) + 1.0;\n    u_xlat1.z = (-u_xlat0) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat10.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat10.x = inversesqrt(u_xlat10.x);\n    u_xlat10.xyz = u_xlat10.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz, u_xlat10.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n    u_xlat16_12.xyz = u_xlat10.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_11 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_11) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat10_11) * vs_TEXCOORD5.xyz;\n    u_xlat11 = dot((-vs_TEXCOORD1.xyz), u_xlat10.xyz);\n    u_xlat31 = u_xlat11;\n    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);\n    u_xlat11 = u_xlat11 + u_xlat11;\n    u_xlat5.xyz = u_xlat10.xyz * (-vec3(u_xlat11)) + (-vs_TEXCOORD1.xyz);\n    u_xlat10.x = dot(u_xlat10.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10.x = clamp(u_xlat10.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat10.xxx * _LightColor0.xyz;\n    u_xlat10.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10.x = u_xlat10.x * u_xlat10.x;\n    u_xlat1.x = u_xlat10.x * u_xlat10.x;\n    u_xlat10.x = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat10.x = u_xlat10.x * 16.0;\n    u_xlat16_33 = (-u_xlat31) + 1.0;\n    u_xlat20 = u_xlat16_33 * u_xlat16_33;\n    u_xlat20 = u_xlat16_33 * u_xlat20;\n    u_xlat20 = u_xlat16_33 * u_xlat20;\n    u_xlat10_30 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_33 = (-u_xlat10_30) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n    u_xlat16_34 = u_xlat0 + u_xlat16_34;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_33) * u_xlat1.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_30) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat20) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat10.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nlowp vec3 u_xlat10_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_12;\nfloat u_xlat14;\nfloat u_xlat21;\nfloat u_xlat22;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat1.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat7.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_8.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_8.xxx * u_xlat16_3.xyz;\n    u_xlat8.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat22 = u_xlat8.x;\n    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);\n    u_xlat8.x = u_xlat8.x + u_xlat8.x;\n    u_xlat4.xyz = u_xlat7.xyz * (-u_xlat8.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat14 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat14 = u_xlat14 * u_xlat14;\n    u_xlat1.x = u_xlat14 * u_xlat14;\n    u_xlat14 = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat14 = u_xlat14 * 16.0;\n    u_xlat16_24 = (-u_xlat22) + 1.0;\n    u_xlat21 = u_xlat16_24 * u_xlat16_24;\n    u_xlat21 = u_xlat16_24 * u_xlat21;\n    u_xlat21 = u_xlat16_24 * u_xlat21;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_24 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_24) + 1.0;\n    u_xlat16_5.x = u_xlat0.x + u_xlat16_5.x;\n    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_8.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_12.xyz = _Color.xyz * u_xlat10_8.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat8.xyz = u_xlat10_8.xyz * _Color.xyz;\n    u_xlat16_12.xyz = vec3(u_xlat10_1) * u_xlat16_12.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_12.xyz) + u_xlat16_5.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat21) * u_xlat16_6.xyz + u_xlat16_12.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat14) * u_xlat16_12.xyz;\n    u_xlat16_5.xyz = u_xlat8.xyz * vec3(u_xlat16_24) + u_xlat16_5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_6.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz;\n    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nvec3 u_xlat10;\nfloat u_xlat11;\nlowp float u_xlat10_11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat20;\nlowp float u_xlat10_30;\nfloat u_xlat31;\nmediump float u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat1.z = (-u_xlat0) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat10.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat10.x = inversesqrt(u_xlat10.x);\n    u_xlat10.xyz = u_xlat10.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz, u_xlat10.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n    u_xlat16_12.xyz = u_xlat10.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_11 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_11) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat10_11) * vs_TEXCOORD5.xyz;\n    u_xlat11 = dot((-vs_TEXCOORD1.xyz), u_xlat10.xyz);\n    u_xlat31 = u_xlat11;\n    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);\n    u_xlat11 = u_xlat11 + u_xlat11;\n    u_xlat5.xyz = u_xlat10.xyz * (-vec3(u_xlat11)) + (-vs_TEXCOORD1.xyz);\n    u_xlat10.x = dot(u_xlat10.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10.x = clamp(u_xlat10.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat10.xxx * _LightColor0.xyz;\n    u_xlat10.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10.x = u_xlat10.x * u_xlat10.x;\n    u_xlat1.x = u_xlat10.x * u_xlat10.x;\n    u_xlat10.x = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat10.x = u_xlat10.x * 16.0;\n    u_xlat16_33 = (-u_xlat31) + 1.0;\n    u_xlat20 = u_xlat16_33 * u_xlat16_33;\n    u_xlat20 = u_xlat16_33 * u_xlat20;\n    u_xlat20 = u_xlat16_33 * u_xlat20;\n    u_xlat10_30 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_33 = (-u_xlat10_30) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n    u_xlat16_34 = u_xlat0 + u_xlat16_34;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_33) * u_xlat1.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_30) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat20) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat10.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nlowp vec3 u_xlat10_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_12;\nfloat u_xlat14;\nfloat u_xlat21;\nfloat u_xlat22;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat1.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat7.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_8.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_8.xxx * u_xlat16_3.xyz;\n    u_xlat8.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat22 = u_xlat8.x;\n    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);\n    u_xlat8.x = u_xlat8.x + u_xlat8.x;\n    u_xlat4.xyz = u_xlat7.xyz * (-u_xlat8.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat14 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat14 = u_xlat14 * u_xlat14;\n    u_xlat1.x = u_xlat14 * u_xlat14;\n    u_xlat14 = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat14 = u_xlat14 * 16.0;\n    u_xlat16_24 = (-u_xlat22) + 1.0;\n    u_xlat21 = u_xlat16_24 * u_xlat16_24;\n    u_xlat21 = u_xlat16_24 * u_xlat21;\n    u_xlat21 = u_xlat16_24 * u_xlat21;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_24 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_24) + 1.0;\n    u_xlat16_5.x = u_xlat0.x + u_xlat16_5.x;\n    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_8.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_12.xyz = _Color.xyz * u_xlat10_8.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat8.xyz = u_xlat10_8.xyz * _Color.xyz;\n    u_xlat16_12.xyz = vec3(u_xlat10_1) * u_xlat16_12.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_12.xyz) + u_xlat16_5.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat21) * u_xlat16_6.xyz + u_xlat16_12.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat14) * u_xlat16_12.xyz;\n    u_xlat16_5.xyz = u_xlat8.xyz * vec3(u_xlat16_24) + u_xlat16_5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_6.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nvec3 u_xlat8;\nfloat u_xlat9;\nlowp float u_xlat10_9;\nmediump vec3 u_xlat16_10;\nfloat u_xlat16;\nlowp float u_xlat10_24;\nfloat u_xlat25;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat1.z = (-u_xlat0) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat8.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat8.x = inversesqrt(u_xlat8.x);\n    u_xlat8.xyz = u_xlat8.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_10.x = dot(vs_TEXCOORD1.xyz, u_xlat8.xyz);\n    u_xlat16_10.x = u_xlat16_10.x + u_xlat16_10.x;\n    u_xlat16_10.xyz = u_xlat8.xyz * (-u_xlat16_10.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_10.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_9 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_9) * u_xlat16_3.xyz;\n    u_xlat9 = dot((-vs_TEXCOORD1.xyz), u_xlat8.xyz);\n    u_xlat25 = u_xlat9;\n    u_xlat25 = clamp(u_xlat25, 0.0, 1.0);\n    u_xlat9 = u_xlat9 + u_xlat9;\n    u_xlat4.xyz = u_xlat8.xyz * (-vec3(u_xlat9)) + (-vs_TEXCOORD1.xyz);\n    u_xlat8.x = dot(u_xlat8.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8.x = clamp(u_xlat8.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat8.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8.x = u_xlat8.x * u_xlat8.x;\n    u_xlat1.x = u_xlat8.x * u_xlat8.x;\n    u_xlat8.x = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat8.x = u_xlat8.x * 16.0;\n    u_xlat16_27 = (-u_xlat25) + 1.0;\n    u_xlat16 = u_xlat16_27 * u_xlat16_27;\n    u_xlat16 = u_xlat16_27 * u_xlat16;\n    u_xlat16 = u_xlat16_27 * u_xlat16;\n    u_xlat10_24 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_27 = (-u_xlat10_24) * 0.779083729 + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29 = u_xlat0 + u_xlat16_29;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_24) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat16) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat8.xxx * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat1.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nfloat u_xlat16;\nmediump float u_xlat16_17;\nlowp float u_xlat10_24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_17 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_17 = min(u_xlat16_17, 1.0);\n    u_xlat16_17 = (-u_xlat16_17) + 1.0;\n    u_xlat16_17 = sqrt(u_xlat16_17);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_17) + u_xlat16_1.xyw;\n    u_xlat16_25 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_25 = u_xlat16_25 + u_xlat16_25;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_25)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0) + 1.0;\n    u_xlat16_25 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_25 = u_xlat16_25 * u_xlat3.z;\n    u_xlat16_25 = u_xlat16_25 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_25);\n    u_xlat16_25 = u_xlat10_2.w + -1.0;\n    u_xlat16_25 = unity_SpecCube0_HDR.w * u_xlat16_25 + 1.0;\n    u_xlat16_25 = u_xlat16_25 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_25);\n    u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_8) * u_xlat16_4.xyz;\n    u_xlat8 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat16 = u_xlat8;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat8 = u_xlat8 + u_xlat8;\n    u_xlat5.xyz = u_xlat16_1.xyz * (-vec3(u_xlat8)) + (-vs_TEXCOORD1.xyz);\n    u_xlat8 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat8) * _LightColor0.xyz;\n    u_xlat8 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 = u_xlat8 * u_xlat8;\n    u_xlat3.x = u_xlat8 * u_xlat8;\n    u_xlat8 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat8 = u_xlat8 * 16.0;\n    u_xlat16_25 = (-u_xlat16) + 1.0;\n    u_xlat16 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16 = u_xlat16_25 * u_xlat16;\n    u_xlat16 = u_xlat16_25 * u_xlat16;\n    u_xlat10_24 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_25 = (-u_xlat10_24) * 0.779083729 + 0.779083729;\n    u_xlat16_28 = (-u_xlat16_25) + 1.0;\n    u_xlat16_28 = u_xlat0 + u_xlat16_28;\n    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_24) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_28) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat16) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat8) * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat3.xyz * vec3(u_xlat16_25) + u_xlat16_6.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;\n    u_xlat16_1.xyz = u_xlat16_6.xyz * u_xlat16_1.xyz + u_xlat16_4.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = u_xlat1.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_3.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_3.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_3.x);\n    u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;\n    u_xlat16_4.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_4.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_4.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_3.xyz = unity_SHC.xyz * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_3.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat2.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat2.zz + u_xlat2.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nlowp float u_xlat10_9;\nmediump float u_xlat16_10;\nvec3 u_xlat12;\nlowp vec3 u_xlat10_12;\nfloat u_xlat18;\nmediump float u_xlat16_19;\nfloat u_xlat27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_19 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_19 = min(u_xlat16_19, 1.0);\n    u_xlat16_19 = (-u_xlat16_19) + 1.0;\n    u_xlat16_19 = sqrt(u_xlat16_19);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_19) + u_xlat16_1.xyw;\n    u_xlat16_28 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_28 = u_xlat16_28 + u_xlat16_28;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_28)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_28 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_28 = u_xlat16_28 * u_xlat3.z;\n    u_xlat16_28 = u_xlat16_28 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_28);\n    u_xlat16_28 = u_xlat10_2.w + -1.0;\n    u_xlat16_28 = unity_SpecCube0_HDR.w * u_xlat16_28 + 1.0;\n    u_xlat16_28 = u_xlat16_28 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_28);\n    u_xlat10_9 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_9) * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_9) * vs_TEXCOORD5.xyz;\n    u_xlat9 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat18 = u_xlat9;\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat9 = u_xlat9 + u_xlat9;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat9)) + (-vs_TEXCOORD1.xyz);\n    u_xlat9 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);\n    u_xlat27 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat3.x = u_xlat27 * u_xlat27;\n    u_xlat27 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat27 = u_xlat27 * 16.0;\n    u_xlat16_1.x = (-u_xlat18) + 1.0;\n    u_xlat18 = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat18 = u_xlat16_1.x * u_xlat18;\n    u_xlat18 = u_xlat16_1.x * u_xlat18;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.x = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_10 = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_10 = u_xlat0.x + u_xlat16_10;\n    u_xlat16_10 = clamp(u_xlat16_10, 0.0, 1.0);\n    u_xlat10_12.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_12.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat12.xyz = u_xlat10_12.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xxx * u_xlat12.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_3) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_10) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat18) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27) * u_xlat16_7.xyz + u_xlat16_1.xzw;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n    u_xlat16_1.xyz = u_xlat16_5.xyz * u_xlat16_1.xzw + u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat9) * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = vec3(u_xlat21) * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat2.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat2.zzzz + u_xlat1;\n    u_xlat1 = u_xlat4 * u_xlat4 + u_xlat3;\n    u_xlat1 = max(u_xlat1, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat1);\n    u_xlat1 = u_xlat1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat1 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat1;\n    u_xlat0 = u_xlat0 * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat1 * u_xlat0;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat16_5.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_5.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_5.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz + u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nlowp float u_xlat10_10;\nfloat u_xlat20;\nmediump float u_xlat16_21;\nlowp float u_xlat10_30;\nmediump float u_xlat16_31;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_21 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_21 = min(u_xlat16_21, 1.0);\n    u_xlat16_21 = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = sqrt(u_xlat16_21);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_21) + u_xlat16_1.xyw;\n    u_xlat16_31 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_31 = u_xlat16_31 + u_xlat16_31;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_31)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0) + 1.0;\n    u_xlat16_31 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_31 = u_xlat16_31 * u_xlat3.z;\n    u_xlat16_31 = u_xlat16_31 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_31);\n    u_xlat16_31 = u_xlat10_2.w + -1.0;\n    u_xlat16_31 = unity_SpecCube0_HDR.w * u_xlat16_31 + 1.0;\n    u_xlat16_31 = u_xlat16_31 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_31);\n    u_xlat10_10 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_10) * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_10) * vs_TEXCOORD5.xyz;\n    u_xlat10 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat20 = u_xlat10;\n    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat10 = u_xlat10 + u_xlat10;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat10)) + (-vs_TEXCOORD1.xyz);\n    u_xlat10 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat10) * _LightColor0.xyz;\n    u_xlat10 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10 = u_xlat10 * u_xlat10;\n    u_xlat3.x = u_xlat10 * u_xlat10;\n    u_xlat10 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat10 = u_xlat10 * 16.0;\n    u_xlat16_31 = (-u_xlat20) + 1.0;\n    u_xlat20 = u_xlat16_31 * u_xlat16_31;\n    u_xlat20 = u_xlat16_31 * u_xlat20;\n    u_xlat20 = u_xlat16_31 * u_xlat20;\n    u_xlat10_30 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_31 = (-u_xlat10_30) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_31) + 1.0;\n    u_xlat16_34 = u_xlat0 + u_xlat16_34;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_31) * u_xlat3.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_30) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat20) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10) * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_1.xyz + u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = u_xlat1.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nlowp float u_xlat10_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat10;\nlowp vec3 u_xlat10_10;\nfloat u_xlat14;\nmediump float u_xlat16_15;\nfloat u_xlat21;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15) + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15) + u_xlat16_1.xyw;\n    u_xlat16_22 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_22 = u_xlat16_22 + u_xlat16_22;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_22)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_22 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_22 = u_xlat16_22 * u_xlat3.z;\n    u_xlat16_22 = u_xlat16_22 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_22);\n    u_xlat16_22 = u_xlat10_2.w + -1.0;\n    u_xlat16_22 = unity_SpecCube0_HDR.w * u_xlat16_22 + 1.0;\n    u_xlat16_22 = u_xlat16_22 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_22);\n    u_xlat10_7 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_7) * u_xlat16_4.xyz;\n    u_xlat7 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat14 = u_xlat7;\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat7 = u_xlat7 + u_xlat7;\n    u_xlat5.xyz = u_xlat16_1.xyz * (-vec3(u_xlat7)) + (-vs_TEXCOORD1.xyz);\n    u_xlat7 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);\n    u_xlat21 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21 = u_xlat21 * u_xlat21;\n    u_xlat3.x = u_xlat21 * u_xlat21;\n    u_xlat21 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat21 = u_xlat21 * 16.0;\n    u_xlat16_1.x = (-u_xlat14) + 1.0;\n    u_xlat14 = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat14 = u_xlat16_1.x * u_xlat14;\n    u_xlat14 = u_xlat16_1.x * u_xlat14;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.x = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_8.x = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_8.x = u_xlat0.x + u_xlat16_8.x;\n    u_xlat16_8.x = clamp(u_xlat16_8.x, 0.0, 1.0);\n    u_xlat10_10.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat10.xyz = u_xlat10_10.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_3) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = u_xlat16_8.xxx + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat14) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat21) * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat10.xyz * u_xlat16_1.xxx + u_xlat16_6.xyz;\n    u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat7) * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat25;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    vs_TEXCOORD1.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    u_xlat2.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat3 = (-u_xlat1.xxxx) + unity_4LightPosX0;\n    u_xlat4 = (-u_xlat1.yyyy) + unity_4LightPosY0;\n    u_xlat5 = u_xlat2.yyyy * u_xlat4;\n    u_xlat4 = u_xlat4 * u_xlat4;\n    u_xlat4 = u_xlat3 * u_xlat3 + u_xlat4;\n    u_xlat3 = u_xlat3 * u_xlat2.xxxx + u_xlat5;\n    u_xlat5 = (-u_xlat1.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1 = u_xlat5 * u_xlat2.zzzz + u_xlat3;\n    u_xlat3 = u_xlat5 * u_xlat5 + u_xlat4;\n    u_xlat3 = max(u_xlat3, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat4 = inversesqrt(u_xlat3);\n    u_xlat3 = u_xlat3 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat3 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat4;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat1 = u_xlat3 * u_xlat1;\n    u_xlat3.xyz = u_xlat1.yyy * unity_LightColor[1].xyz;\n    u_xlat3.xyz = unity_LightColor[0].xyz * u_xlat1.xxx + u_xlat3.xyz;\n    u_xlat1.xyz = unity_LightColor[2].xyz * u_xlat1.zzz + u_xlat3.xyz;\n    u_xlat1.xyz = unity_LightColor[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat16_6.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_6.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_6.x);\n    u_xlat16_3 = u_xlat2.yzzx * u_xlat2.xyzz;\n    u_xlat16_7.x = dot(unity_SHBr, u_xlat16_3);\n    u_xlat16_7.y = dot(unity_SHBg, u_xlat16_3);\n    u_xlat16_7.z = dot(unity_SHBb, u_xlat16_3);\n    u_xlat16_6.xyz = unity_SHC.xyz * u_xlat16_6.xxx + u_xlat16_7.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_7.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_7.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_7.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_6.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz + u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nvec3 u_xlat10;\nlowp vec3 u_xlat10_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat18;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump float u_xlat16_30;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat1.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat9.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_10.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_10.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat10_10.xxx * vs_TEXCOORD5.xyz;\n    u_xlat10.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat28 = u_xlat10.x;\n    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10.x = u_xlat10.x + u_xlat10.x;\n    u_xlat5.xyz = u_xlat9.xyz * (-u_xlat10.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat18 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat18 = u_xlat18 * u_xlat18;\n    u_xlat1.x = u_xlat18 * u_xlat18;\n    u_xlat18 = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat18 = u_xlat18 * 16.0;\n    u_xlat16_30 = (-u_xlat28) + 1.0;\n    u_xlat27 = u_xlat16_30 * u_xlat16_30;\n    u_xlat27 = u_xlat16_30 * u_xlat27;\n    u_xlat27 = u_xlat16_30 * u_xlat27;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_30 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_30) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_10.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat10.xyz = u_xlat10_10.xyz * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat10.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat27) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat9.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_2.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_2.x);\n    u_xlat16_0 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_2.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nlowp float u_xlat10_10;\nfloat u_xlat20;\nmediump float u_xlat16_21;\nlowp float u_xlat10_30;\nmediump float u_xlat16_31;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_21 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_21 = min(u_xlat16_21, 1.0);\n    u_xlat16_21 = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = sqrt(u_xlat16_21);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_21) + u_xlat16_1.xyw;\n    u_xlat16_31 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_31 = u_xlat16_31 + u_xlat16_31;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_31)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0) + 1.0;\n    u_xlat16_31 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_31 = u_xlat16_31 * u_xlat3.z;\n    u_xlat16_31 = u_xlat16_31 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_31);\n    u_xlat16_31 = u_xlat10_2.w + -1.0;\n    u_xlat16_31 = unity_SpecCube0_HDR.w * u_xlat16_31 + 1.0;\n    u_xlat16_31 = u_xlat16_31 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_31);\n    u_xlat10_10 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_10) * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_10) * vs_TEXCOORD5.xyz;\n    u_xlat10 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat20 = u_xlat10;\n    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat10 = u_xlat10 + u_xlat10;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat10)) + (-vs_TEXCOORD1.xyz);\n    u_xlat10 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat10) * _LightColor0.xyz;\n    u_xlat10 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10 = u_xlat10 * u_xlat10;\n    u_xlat3.x = u_xlat10 * u_xlat10;\n    u_xlat10 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat10 = u_xlat10 * 16.0;\n    u_xlat16_31 = (-u_xlat20) + 1.0;\n    u_xlat20 = u_xlat16_31 * u_xlat16_31;\n    u_xlat20 = u_xlat16_31 * u_xlat20;\n    u_xlat20 = u_xlat16_31 * u_xlat20;\n    u_xlat10_30 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_31 = (-u_xlat10_30) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_31) + 1.0;\n    u_xlat16_34 = u_xlat0 + u_xlat16_34;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_31) * u_xlat3.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_30) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat20) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10) * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_7.xyz * u_xlat16_1.xyz + u_xlat16_4.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = u_xlat1.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nlowp float u_xlat10_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat10;\nlowp vec3 u_xlat10_10;\nfloat u_xlat14;\nmediump float u_xlat16_15;\nfloat u_xlat21;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15) + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15) + u_xlat16_1.xyw;\n    u_xlat16_22 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_22 = u_xlat16_22 + u_xlat16_22;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_22)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_22 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_22 = u_xlat16_22 * u_xlat3.z;\n    u_xlat16_22 = u_xlat16_22 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_22);\n    u_xlat16_22 = u_xlat10_2.w + -1.0;\n    u_xlat16_22 = unity_SpecCube0_HDR.w * u_xlat16_22 + 1.0;\n    u_xlat16_22 = u_xlat16_22 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_22);\n    u_xlat10_7 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_7) * u_xlat16_4.xyz;\n    u_xlat7 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat14 = u_xlat7;\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat7 = u_xlat7 + u_xlat7;\n    u_xlat5.xyz = u_xlat16_1.xyz * (-vec3(u_xlat7)) + (-vs_TEXCOORD1.xyz);\n    u_xlat7 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);\n    u_xlat21 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21 = u_xlat21 * u_xlat21;\n    u_xlat3.x = u_xlat21 * u_xlat21;\n    u_xlat21 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat21 = u_xlat21 * 16.0;\n    u_xlat16_1.x = (-u_xlat14) + 1.0;\n    u_xlat14 = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat14 = u_xlat16_1.x * u_xlat14;\n    u_xlat14 = u_xlat16_1.x * u_xlat14;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.x = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_8.x = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_8.x = u_xlat0.x + u_xlat16_8.x;\n    u_xlat16_8.x = clamp(u_xlat16_8.x, 0.0, 1.0);\n    u_xlat10_10.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat10.xyz = u_xlat10_10.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_3) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = u_xlat16_8.xxx + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat14) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat21) * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat10.xyz * u_xlat16_1.xxx + u_xlat16_6.xyz;\n    u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat7) * u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_1.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat16_3.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_3.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_3.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_4.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_4.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_4.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_3.xyz = unity_SHC.xyz * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_3.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nvec3 u_xlat10;\nlowp vec3 u_xlat10_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat18;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump float u_xlat16_30;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat1.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat9.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_10.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_10.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat10_10.xxx * vs_TEXCOORD5.xyz;\n    u_xlat10.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat28 = u_xlat10.x;\n    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10.x = u_xlat10.x + u_xlat10.x;\n    u_xlat5.xyz = u_xlat9.xyz * (-u_xlat10.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat18 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat18 = u_xlat18 * u_xlat18;\n    u_xlat1.x = u_xlat18 * u_xlat18;\n    u_xlat18 = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat18 = u_xlat18 * 16.0;\n    u_xlat16_30 = (-u_xlat28) + 1.0;\n    u_xlat27 = u_xlat16_30 * u_xlat16_30;\n    u_xlat27 = u_xlat16_30 * u_xlat27;\n    u_xlat27 = u_xlat16_30 * u_xlat27;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_30 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_30) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_10.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat10.xyz = u_xlat10_10.xyz * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat10.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat27) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat9.xxx * u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat0.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    vs_TEXCOORD2.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat16_2.xyz = u_xlat0.yzx * u_xlat1.zxy;\n    u_xlat16_2.xyz = u_xlat1.yzx * u_xlat0.zxy + (-u_xlat16_2.xyz);\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_2.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nfloat u_xlat16;\nmediump float u_xlat16_17;\nlowp float u_xlat10_24;\nmediump float u_xlat16_25;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_17 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_17 = min(u_xlat16_17, 1.0);\n    u_xlat16_17 = (-u_xlat16_17) + 1.0;\n    u_xlat16_17 = sqrt(u_xlat16_17);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_17) + u_xlat16_1.xyw;\n    u_xlat16_25 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_25 = u_xlat16_25 + u_xlat16_25;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_25)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0) + 1.0;\n    u_xlat16_25 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_25 = u_xlat16_25 * u_xlat3.z;\n    u_xlat16_25 = u_xlat16_25 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_25);\n    u_xlat16_25 = u_xlat10_2.w + -1.0;\n    u_xlat16_25 = unity_SpecCube0_HDR.w * u_xlat16_25 + 1.0;\n    u_xlat16_25 = u_xlat16_25 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_25);\n    u_xlat10_8 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_8) * u_xlat16_4.xyz;\n    u_xlat8 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat16 = u_xlat8;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat8 = u_xlat8 + u_xlat8;\n    u_xlat5.xyz = u_xlat16_1.xyz * (-vec3(u_xlat8)) + (-vs_TEXCOORD1.xyz);\n    u_xlat8 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 = clamp(u_xlat8, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat8) * _LightColor0.xyz;\n    u_xlat8 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat8 = u_xlat8 * u_xlat8;\n    u_xlat3.x = u_xlat8 * u_xlat8;\n    u_xlat8 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat8 = u_xlat8 * 16.0;\n    u_xlat16_25 = (-u_xlat16) + 1.0;\n    u_xlat16 = u_xlat16_25 * u_xlat16_25;\n    u_xlat16 = u_xlat16_25 * u_xlat16;\n    u_xlat16 = u_xlat16_25 * u_xlat16;\n    u_xlat10_24 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_25 = (-u_xlat10_24) * 0.779083729 + 0.779083729;\n    u_xlat16_28 = (-u_xlat16_25) + 1.0;\n    u_xlat16_28 = u_xlat0 + u_xlat16_28;\n    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_24) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_28) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat16) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat8) * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat3.xyz * vec3(u_xlat16_25) + u_xlat16_6.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;\n    u_xlat16_1.xyz = u_xlat16_6.xyz * u_xlat16_1.xyz + u_xlat16_4.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat1.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;\n    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat1.zzzz + u_xlat2;\n    u_xlat2 = u_xlat4 * u_xlat4 + u_xlat3;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat2);\n    u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat0 = u_xlat0 * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat2 * u_xlat0;\n    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;\n    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat1.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);\n    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_5.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz + u_xlat1.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nvec3 u_xlat10;\nfloat u_xlat11;\nlowp float u_xlat10_11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat20;\nlowp float u_xlat10_30;\nfloat u_xlat31;\nmediump float u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat1.z = (-u_xlat0) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat10.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat10.x = inversesqrt(u_xlat10.x);\n    u_xlat10.xyz = u_xlat10.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_12.x = dot(vs_TEXCOORD1.xyz, u_xlat10.xyz);\n    u_xlat16_12.x = u_xlat16_12.x + u_xlat16_12.x;\n    u_xlat16_12.xyz = u_xlat10.xyz * (-u_xlat16_12.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_12.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_11 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_11) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat10_11) * vs_TEXCOORD5.xyz;\n    u_xlat11 = dot((-vs_TEXCOORD1.xyz), u_xlat10.xyz);\n    u_xlat31 = u_xlat11;\n    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);\n    u_xlat11 = u_xlat11 + u_xlat11;\n    u_xlat5.xyz = u_xlat10.xyz * (-vec3(u_xlat11)) + (-vs_TEXCOORD1.xyz);\n    u_xlat10.x = dot(u_xlat10.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10.x = clamp(u_xlat10.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat10.xxx * _LightColor0.xyz;\n    u_xlat10.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10.x = u_xlat10.x * u_xlat10.x;\n    u_xlat1.x = u_xlat10.x * u_xlat10.x;\n    u_xlat10.x = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat10.x = u_xlat10.x * 16.0;\n    u_xlat16_33 = (-u_xlat31) + 1.0;\n    u_xlat20 = u_xlat16_33 * u_xlat16_33;\n    u_xlat20 = u_xlat16_33 * u_xlat20;\n    u_xlat20 = u_xlat16_33 * u_xlat20;\n    u_xlat10_30 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_33 = (-u_xlat10_30) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n    u_xlat16_34 = u_xlat0 + u_xlat16_34;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_33) * u_xlat1.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_30) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat20) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat10.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nlowp vec3 u_xlat10_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_12;\nfloat u_xlat14;\nfloat u_xlat21;\nfloat u_xlat22;\nmediump float u_xlat16_24;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat1.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat7.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat7.x = inversesqrt(u_xlat7.x);\n    u_xlat7.xyz = u_xlat7.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat7.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat7.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_8.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_8.xxx * u_xlat16_3.xyz;\n    u_xlat8.x = dot((-vs_TEXCOORD1.xyz), u_xlat7.xyz);\n    u_xlat22 = u_xlat8.x;\n    u_xlat22 = clamp(u_xlat22, 0.0, 1.0);\n    u_xlat8.x = u_xlat8.x + u_xlat8.x;\n    u_xlat4.xyz = u_xlat7.xyz * (-u_xlat8.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat7.x = dot(u_xlat7.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7.x = clamp(u_xlat7.x, 0.0, 1.0);\n    u_xlat14 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat14 = u_xlat14 * u_xlat14;\n    u_xlat1.x = u_xlat14 * u_xlat14;\n    u_xlat14 = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat14 = u_xlat14 * 16.0;\n    u_xlat16_24 = (-u_xlat22) + 1.0;\n    u_xlat21 = u_xlat16_24 * u_xlat16_24;\n    u_xlat21 = u_xlat16_24 * u_xlat21;\n    u_xlat21 = u_xlat16_24 * u_xlat21;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_24 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_5.x = (-u_xlat16_24) + 1.0;\n    u_xlat16_5.x = u_xlat0.x + u_xlat16_5.x;\n    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);\n    u_xlat10_8.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_12.xyz = _Color.xyz * u_xlat10_8.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat8.xyz = u_xlat10_8.xyz * _Color.xyz;\n    u_xlat16_12.xyz = vec3(u_xlat10_1) * u_xlat16_12.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_6.xyz = (-u_xlat16_12.xyz) + u_xlat16_5.xxx;\n    u_xlat16_6.xyz = vec3(u_xlat21) * u_xlat16_6.xyz + u_xlat16_12.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat14) * u_xlat16_12.xyz;\n    u_xlat16_5.xyz = u_xlat8.xyz * vec3(u_xlat16_24) + u_xlat16_5.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_6.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_6.xyz = u_xlat7.xxx * u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat25;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    vs_TEXCOORD1.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    u_xlat2.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat25 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    u_xlat3.xyz = vec3(u_xlat25) * u_xlat3.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat3.zxy;\n    u_xlat16_4.xyz = u_xlat3.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n    u_xlat25 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_4.xyz = vec3(u_xlat25) * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat3.xyz;\n    u_xlat2 = (-u_xlat1.xxxx) + unity_4LightPosX0;\n    u_xlat4 = (-u_xlat1.yyyy) + unity_4LightPosY0;\n    u_xlat5 = u_xlat3.yyyy * u_xlat4;\n    u_xlat4 = u_xlat4 * u_xlat4;\n    u_xlat4 = u_xlat2 * u_xlat2 + u_xlat4;\n    u_xlat2 = u_xlat2 * u_xlat3.xxxx + u_xlat5;\n    u_xlat5 = (-u_xlat1.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1 = u_xlat5 * u_xlat3.zzzz + u_xlat2;\n    u_xlat2 = u_xlat5 * u_xlat5 + u_xlat4;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat4 = inversesqrt(u_xlat2);\n    u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat1 = u_xlat1 * u_xlat4;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat1 = u_xlat2 * u_xlat1;\n    u_xlat2.xyz = u_xlat1.yyy * unity_LightColor[1].xyz;\n    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat1.xxx + u_xlat2.xyz;\n    u_xlat1.xyz = unity_LightColor[2].xyz * u_xlat1.zzz + u_xlat2.xyz;\n    u_xlat1.xyz = unity_LightColor[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat16_6.x = u_xlat3.y * u_xlat3.y;\n    u_xlat16_6.x = u_xlat3.x * u_xlat3.x + (-u_xlat16_6.x);\n    u_xlat16_2 = u_xlat3.yzzx * u_xlat3.xyzz;\n    u_xlat16_7.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_7.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_7.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_6.xyz = unity_SHC.xyz * u_xlat16_6.xxx + u_xlat16_7.xyz;\n    u_xlat3.w = 1.0;\n    u_xlat16_7.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_7.y = dot(unity_SHAg, u_xlat3);\n    u_xlat16_7.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3.xyz = log2(u_xlat16_6.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat3.xyz = exp2(u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz + u_xlat3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nlowp float u_xlat10_9;\nmediump float u_xlat16_10;\nvec3 u_xlat12;\nlowp vec3 u_xlat10_12;\nfloat u_xlat18;\nmediump float u_xlat16_19;\nfloat u_xlat27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_19 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_19 = min(u_xlat16_19, 1.0);\n    u_xlat16_19 = (-u_xlat16_19) + 1.0;\n    u_xlat16_19 = sqrt(u_xlat16_19);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_19) + u_xlat16_1.xyw;\n    u_xlat16_28 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_28 = u_xlat16_28 + u_xlat16_28;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_28)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_28 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_28 = u_xlat16_28 * u_xlat3.z;\n    u_xlat16_28 = u_xlat16_28 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_28);\n    u_xlat16_28 = u_xlat10_2.w + -1.0;\n    u_xlat16_28 = unity_SpecCube0_HDR.w * u_xlat16_28 + 1.0;\n    u_xlat16_28 = u_xlat16_28 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_28);\n    u_xlat10_9 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_9) * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_9) * vs_TEXCOORD5.xyz;\n    u_xlat9 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat18 = u_xlat9;\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat9 = u_xlat9 + u_xlat9;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat9)) + (-vs_TEXCOORD1.xyz);\n    u_xlat9 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);\n    u_xlat27 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat3.x = u_xlat27 * u_xlat27;\n    u_xlat27 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat27 = u_xlat27 * 16.0;\n    u_xlat16_1.x = (-u_xlat18) + 1.0;\n    u_xlat18 = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat18 = u_xlat16_1.x * u_xlat18;\n    u_xlat18 = u_xlat16_1.x * u_xlat18;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.x = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_10 = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_10 = u_xlat0.x + u_xlat16_10;\n    u_xlat16_10 = clamp(u_xlat16_10, 0.0, 1.0);\n    u_xlat10_12.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_12.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat12.xyz = u_xlat10_12.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xxx * u_xlat12.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_3) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_10) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat18) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27) * u_xlat16_7.xyz + u_xlat16_1.xzw;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n    u_xlat16_1.xyz = u_xlat16_5.xyz * u_xlat16_1.xzw + u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat9) * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nbool u_xlatb1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = u_xlat1.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_3.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_3.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_3.x);\n    u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;\n    u_xlat16_4.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_4.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_4.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_3.xyz = unity_SHC.xyz * u_xlat16_3.xxx + u_xlat16_4.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_4.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_4.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_4.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat16_4.xyz;\n    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_3.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat2.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat2.zz + u_xlat2.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nlowp float u_xlat10_9;\nmediump float u_xlat16_10;\nvec3 u_xlat12;\nlowp vec3 u_xlat10_12;\nfloat u_xlat18;\nmediump float u_xlat16_19;\nfloat u_xlat27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_19 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_19 = min(u_xlat16_19, 1.0);\n    u_xlat16_19 = (-u_xlat16_19) + 1.0;\n    u_xlat16_19 = sqrt(u_xlat16_19);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_19) + u_xlat16_1.xyw;\n    u_xlat16_28 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_28 = u_xlat16_28 + u_xlat16_28;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_28)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_28 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_28 = u_xlat16_28 * u_xlat3.z;\n    u_xlat16_28 = u_xlat16_28 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_28);\n    u_xlat16_28 = u_xlat10_2.w + -1.0;\n    u_xlat16_28 = unity_SpecCube0_HDR.w * u_xlat16_28 + 1.0;\n    u_xlat16_28 = u_xlat16_28 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_28);\n    u_xlat10_9 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_9) * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_9) * vs_TEXCOORD5.xyz;\n    u_xlat9 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat18 = u_xlat9;\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat9 = u_xlat9 + u_xlat9;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat9)) + (-vs_TEXCOORD1.xyz);\n    u_xlat9 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);\n    u_xlat27 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat3.x = u_xlat27 * u_xlat27;\n    u_xlat27 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat27 = u_xlat27 * 16.0;\n    u_xlat16_1.x = (-u_xlat18) + 1.0;\n    u_xlat18 = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat18 = u_xlat16_1.x * u_xlat18;\n    u_xlat18 = u_xlat16_1.x * u_xlat18;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.x = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_10 = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_10 = u_xlat0.x + u_xlat16_10;\n    u_xlat16_10 = clamp(u_xlat16_10, 0.0, 1.0);\n    u_xlat10_12.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_12.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat12.xyz = u_xlat10_12.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xxx * u_xlat12.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_3) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_10) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat18) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27) * u_xlat16_7.xyz + u_xlat16_1.xzw;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n    u_xlat16_1.xyz = u_xlat16_5.xyz * u_xlat16_1.xzw + u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat9) * u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz + u_xlat16_1.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat21;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    vs_TEXCOORD1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = vec3(u_xlat21) * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;\n    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;\n    u_xlat4 = u_xlat2.yyyy * u_xlat3;\n    u_xlat3 = u_xlat3 * u_xlat3;\n    u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;\n    u_xlat4 = (-u_xlat0.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0 = u_xlat4 * u_xlat2.zzzz + u_xlat1;\n    u_xlat1 = u_xlat4 * u_xlat4 + u_xlat3;\n    u_xlat1 = max(u_xlat1, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat3 = inversesqrt(u_xlat1);\n    u_xlat1 = u_xlat1 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat1 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat1;\n    u_xlat0 = u_xlat0 * u_xlat3;\n    u_xlat0 = max(u_xlat0, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat1 * u_xlat0;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat16_5.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_5.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_5.x);\n    u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;\n    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_5.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz + u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nlowp float u_xlat10_10;\nfloat u_xlat20;\nmediump float u_xlat16_21;\nlowp float u_xlat10_30;\nmediump float u_xlat16_31;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_21 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_21 = min(u_xlat16_21, 1.0);\n    u_xlat16_21 = (-u_xlat16_21) + 1.0;\n    u_xlat16_21 = sqrt(u_xlat16_21);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_21) + u_xlat16_1.xyw;\n    u_xlat16_31 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_31 = u_xlat16_31 + u_xlat16_31;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_31)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0 = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0) + 1.0;\n    u_xlat16_31 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_31 = u_xlat16_31 * u_xlat3.z;\n    u_xlat16_31 = u_xlat16_31 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_31);\n    u_xlat16_31 = u_xlat10_2.w + -1.0;\n    u_xlat16_31 = unity_SpecCube0_HDR.w * u_xlat16_31 + 1.0;\n    u_xlat16_31 = u_xlat16_31 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_31);\n    u_xlat10_10 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_10) * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_10) * vs_TEXCOORD5.xyz;\n    u_xlat10 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat20 = u_xlat10;\n    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat10 = u_xlat10 + u_xlat10;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat10)) + (-vs_TEXCOORD1.xyz);\n    u_xlat10 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);\n    u_xlat16_1.xyz = vec3(u_xlat10) * _LightColor0.xyz;\n    u_xlat10 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat10 = u_xlat10 * u_xlat10;\n    u_xlat3.x = u_xlat10 * u_xlat10;\n    u_xlat10 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat10 = u_xlat10 * 16.0;\n    u_xlat16_31 = (-u_xlat20) + 1.0;\n    u_xlat20 = u_xlat16_31 * u_xlat16_31;\n    u_xlat20 = u_xlat16_31 * u_xlat20;\n    u_xlat20 = u_xlat16_31 * u_xlat20;\n    u_xlat10_30 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_31 = (-u_xlat10_30) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_31) + 1.0;\n    u_xlat16_34 = u_xlat0 + u_xlat16_34;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_31) * u_xlat3.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_30) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat20) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10) * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_9.xyz;\n    u_xlat16_4.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_7.xyz * u_xlat16_1.xyz + u_xlat16_4.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    vs_TEXCOORD1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat13 = inversesqrt(u_xlat13);\n    u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat2.zxy;\n    u_xlat16_3.xyz = u_xlat2.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = u_xlat1.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nfloat u_xlat7;\nlowp float u_xlat10_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat10;\nlowp vec3 u_xlat10_10;\nfloat u_xlat14;\nmediump float u_xlat16_15;\nfloat u_xlat21;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_15 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_15 = min(u_xlat16_15, 1.0);\n    u_xlat16_15 = (-u_xlat16_15) + 1.0;\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_15) + u_xlat16_1.xyw;\n    u_xlat16_22 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_22 = u_xlat16_22 + u_xlat16_22;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_22)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_22 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_22 = u_xlat16_22 * u_xlat3.z;\n    u_xlat16_22 = u_xlat16_22 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_22);\n    u_xlat16_22 = u_xlat10_2.w + -1.0;\n    u_xlat16_22 = unity_SpecCube0_HDR.w * u_xlat16_22 + 1.0;\n    u_xlat16_22 = u_xlat16_22 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_22);\n    u_xlat10_7 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_7) * u_xlat16_4.xyz;\n    u_xlat7 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat14 = u_xlat7;\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat7 = u_xlat7 + u_xlat7;\n    u_xlat5.xyz = u_xlat16_1.xyz * (-vec3(u_xlat7)) + (-vs_TEXCOORD1.xyz);\n    u_xlat7 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);\n    u_xlat21 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat21 = u_xlat21 * u_xlat21;\n    u_xlat3.x = u_xlat21 * u_xlat21;\n    u_xlat21 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat21 = u_xlat21 * 16.0;\n    u_xlat16_1.x = (-u_xlat14) + 1.0;\n    u_xlat14 = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat14 = u_xlat16_1.x * u_xlat14;\n    u_xlat14 = u_xlat16_1.x * u_xlat14;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.x = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_8.x = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_8.x = u_xlat0.x + u_xlat16_8.x;\n    u_xlat16_8.x = clamp(u_xlat16_8.x, 0.0, 1.0);\n    u_xlat10_10.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat10.xyz = u_xlat10_10.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_3) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = u_xlat16_8.xxx + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat14) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat21) * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat10.xyz * u_xlat16_1.xxx + u_xlat16_6.xyz;\n    u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat7) * u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_1.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat25;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    vs_TEXCOORD1.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    u_xlat2.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat3 = (-u_xlat1.xxxx) + unity_4LightPosX0;\n    u_xlat4 = (-u_xlat1.yyyy) + unity_4LightPosY0;\n    u_xlat5 = u_xlat2.yyyy * u_xlat4;\n    u_xlat4 = u_xlat4 * u_xlat4;\n    u_xlat4 = u_xlat3 * u_xlat3 + u_xlat4;\n    u_xlat3 = u_xlat3 * u_xlat2.xxxx + u_xlat5;\n    u_xlat5 = (-u_xlat1.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1 = u_xlat5 * u_xlat2.zzzz + u_xlat3;\n    u_xlat3 = u_xlat5 * u_xlat5 + u_xlat4;\n    u_xlat3 = max(u_xlat3, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat4 = inversesqrt(u_xlat3);\n    u_xlat3 = u_xlat3 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat3 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat3;\n    u_xlat1 = u_xlat1 * u_xlat4;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat1 = u_xlat3 * u_xlat1;\n    u_xlat3.xyz = u_xlat1.yyy * unity_LightColor[1].xyz;\n    u_xlat3.xyz = unity_LightColor[0].xyz * u_xlat1.xxx + u_xlat3.xyz;\n    u_xlat1.xyz = unity_LightColor[2].xyz * u_xlat1.zzz + u_xlat3.xyz;\n    u_xlat1.xyz = unity_LightColor[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat16_6.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_6.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_6.x);\n    u_xlat16_3 = u_xlat2.yzzx * u_xlat2.xyzz;\n    u_xlat16_7.x = dot(unity_SHBr, u_xlat16_3);\n    u_xlat16_7.y = dot(unity_SHBg, u_xlat16_3);\n    u_xlat16_7.z = dot(unity_SHBb, u_xlat16_3);\n    u_xlat16_6.xyz = unity_SHC.xyz * u_xlat16_6.xxx + u_xlat16_7.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_7.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_7.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_7.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat2.xyz = log2(u_xlat16_6.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat2.xyz = exp2(u_xlat2.xyz);\n    u_xlat2.xyz = u_xlat2.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat2.xyz = max(u_xlat2.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz + u_xlat2.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nmediump float u_xlat16_2;\nlowp vec4 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nvec3 u_xlat9;\nvec3 u_xlat10;\nlowp vec3 u_xlat10_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat18;\nfloat u_xlat27;\nfloat u_xlat28;\nmediump float u_xlat16_30;\nmediump float u_xlat16_31;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat1.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_2 = (-u_xlat1.z) * 0.699999988 + 1.70000005;\n    u_xlat16_2 = u_xlat1.z * u_xlat16_2;\n    u_xlat16_2 = u_xlat16_2 * 6.0;\n    u_xlat9.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat9.x = inversesqrt(u_xlat9.x);\n    u_xlat9.xyz = u_xlat9.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat9.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat9.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_2);\n    u_xlat16_3.x = u_xlat10_2.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_2.xyz * u_xlat16_3.xxx;\n    u_xlat10_10.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_10.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat10_10.xxx * vs_TEXCOORD5.xyz;\n    u_xlat10.x = dot((-vs_TEXCOORD1.xyz), u_xlat9.xyz);\n    u_xlat28 = u_xlat10.x;\n    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);\n    u_xlat10.x = u_xlat10.x + u_xlat10.x;\n    u_xlat5.xyz = u_xlat9.xyz * (-u_xlat10.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat9.x = dot(u_xlat9.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);\n    u_xlat18 = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat18 = u_xlat18 * u_xlat18;\n    u_xlat1.x = u_xlat18 * u_xlat18;\n    u_xlat18 = texture2D(unity_NHxRoughness, u_xlat1.xz).x;\n    u_xlat18 = u_xlat18 * 16.0;\n    u_xlat16_30 = (-u_xlat28) + 1.0;\n    u_xlat27 = u_xlat16_30 * u_xlat16_30;\n    u_xlat27 = u_xlat16_30 * u_xlat27;\n    u_xlat27 = u_xlat16_30 * u_xlat27;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_30 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_31 = (-u_xlat16_30) + 1.0;\n    u_xlat16_31 = u_xlat0.x + u_xlat16_31;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat10_10.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat10.xyz = u_xlat10_10.xyz * _Color.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat10.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_31) + (-u_xlat16_6.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat27) * u_xlat16_8.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = vec3(u_xlat18) * u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat9.xxx * u_xlat16_4.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat25;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    vs_TEXCOORD1.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat25 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    u_xlat2.xyz = vec3(u_xlat25) * u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    vs_TEXCOORD2.w = 0.0;\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat25 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat25 = inversesqrt(u_xlat25);\n    u_xlat3.xyz = vec3(u_xlat25) * u_xlat3.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat3.zxy;\n    u_xlat16_4.xyz = u_xlat3.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n    u_xlat25 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_4.xyz = vec3(u_xlat25) * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = 0.0;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD4.xyz = u_xlat3.xyz;\n    u_xlat2 = (-u_xlat1.xxxx) + unity_4LightPosX0;\n    u_xlat4 = (-u_xlat1.yyyy) + unity_4LightPosY0;\n    u_xlat5 = u_xlat3.yyyy * u_xlat4;\n    u_xlat4 = u_xlat4 * u_xlat4;\n    u_xlat4 = u_xlat2 * u_xlat2 + u_xlat4;\n    u_xlat2 = u_xlat2 * u_xlat3.xxxx + u_xlat5;\n    u_xlat5 = (-u_xlat1.zzzz) + unity_4LightPosZ0;\n    vs_TEXCOORD8.xyz = u_xlat1.xyz;\n    u_xlat1 = u_xlat5 * u_xlat3.zzzz + u_xlat2;\n    u_xlat2 = u_xlat5 * u_xlat5 + u_xlat4;\n    u_xlat2 = max(u_xlat2, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat4 = inversesqrt(u_xlat2);\n    u_xlat2 = u_xlat2 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat2 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat2;\n    u_xlat1 = u_xlat1 * u_xlat4;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat1 = u_xlat2 * u_xlat1;\n    u_xlat2.xyz = u_xlat1.yyy * unity_LightColor[1].xyz;\n    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat1.xxx + u_xlat2.xyz;\n    u_xlat1.xyz = unity_LightColor[2].xyz * u_xlat1.zzz + u_xlat2.xyz;\n    u_xlat1.xyz = unity_LightColor[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat16_6.x = u_xlat3.y * u_xlat3.y;\n    u_xlat16_6.x = u_xlat3.x * u_xlat3.x + (-u_xlat16_6.x);\n    u_xlat16_2 = u_xlat3.yzzx * u_xlat3.xyzz;\n    u_xlat16_7.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_7.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_7.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_6.xyz = unity_SHC.xyz * u_xlat16_6.xxx + u_xlat16_7.xyz;\n    u_xlat3.w = 1.0;\n    u_xlat16_7.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_7.y = dot(unity_SHAg, u_xlat3);\n    u_xlat16_7.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + u_xlat16_7.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat3.xyz = log2(u_xlat16_6.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat3.xyz = exp2(u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat1.xyz + u_xlat3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nlowp float u_xlat10_9;\nmediump float u_xlat16_10;\nvec3 u_xlat12;\nlowp vec3 u_xlat10_12;\nfloat u_xlat18;\nmediump float u_xlat16_19;\nfloat u_xlat27;\nmediump float u_xlat16_28;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_19 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_19 = min(u_xlat16_19, 1.0);\n    u_xlat16_19 = (-u_xlat16_19) + 1.0;\n    u_xlat16_19 = sqrt(u_xlat16_19);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_19) + u_xlat16_1.xyw;\n    u_xlat16_28 = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_28 = u_xlat16_28 + u_xlat16_28;\n    u_xlat16_2.xyz = u_xlat16_1.xyz * (-vec3(u_xlat16_28)) + vs_TEXCOORD1.xyz;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.z = (-u_xlat0.x) + 1.0;\n    u_xlat16_28 = (-u_xlat3.z) * 0.699999988 + 1.70000005;\n    u_xlat16_28 = u_xlat16_28 * u_xlat3.z;\n    u_xlat16_28 = u_xlat16_28 * 6.0;\n    u_xlat10_2 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_2.xyz, u_xlat16_28);\n    u_xlat16_28 = u_xlat10_2.w + -1.0;\n    u_xlat16_28 = unity_SpecCube0_HDR.w * u_xlat16_28 + 1.0;\n    u_xlat16_28 = u_xlat16_28 * unity_SpecCube0_HDR.x;\n    u_xlat16_4.xyz = u_xlat10_2.xyz * vec3(u_xlat16_28);\n    u_xlat10_9 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_4.xyz = vec3(u_xlat10_9) * u_xlat16_4.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat10_9) * vs_TEXCOORD5.xyz;\n    u_xlat9 = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat18 = u_xlat9;\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat9 = u_xlat9 + u_xlat9;\n    u_xlat6.xyz = u_xlat16_1.xyz * (-vec3(u_xlat9)) + (-vs_TEXCOORD1.xyz);\n    u_xlat9 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);\n    u_xlat27 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat27 = u_xlat27 * u_xlat27;\n    u_xlat3.x = u_xlat27 * u_xlat27;\n    u_xlat27 = texture2D(unity_NHxRoughness, u_xlat3.xz).x;\n    u_xlat27 = u_xlat27 * 16.0;\n    u_xlat16_1.x = (-u_xlat18) + 1.0;\n    u_xlat18 = u_xlat16_1.x * u_xlat16_1.x;\n    u_xlat18 = u_xlat16_1.x * u_xlat18;\n    u_xlat18 = u_xlat16_1.x * u_xlat18;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.x = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_10 = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_10 = u_xlat0.x + u_xlat16_10;\n    u_xlat16_10 = clamp(u_xlat16_10, 0.0, 1.0);\n    u_xlat10_12.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_12.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat12.xyz = u_xlat10_12.xyz * _Color.xyz;\n    u_xlat16_1.xzw = u_xlat16_1.xxx * u_xlat12.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat10_3) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_8.xyz = vec3(u_xlat16_10) + (-u_xlat16_7.xyz);\n    u_xlat16_8.xyz = vec3(u_xlat18) * u_xlat16_8.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = vec3(u_xlat27) * u_xlat16_7.xyz + u_xlat16_1.xzw;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;\n    u_xlat16_1.xyz = u_xlat16_5.xyz * u_xlat16_1.xzw + u_xlat16_4.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat9) * u_xlat16_4.xyz;\n    u_xlat16_1.xyz = u_xlat16_7.xyz * u_xlat16_4.xyz + u_xlat16_1.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x * u_xlat5.x;\n    u_xlat1.y = _Glossiness;\n    u_xlat5.x = texture2D(unity_NHxRoughness, u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_3.xyz = u_xlat5.xxx * u_xlat16_3.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = texture2D(_LightTexture0, u_xlat5.xx).x;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3 u_xlat10_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;\n    vs_TEXCOORD6 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D _LightTextureB0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec4 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nbool u_xlatb10;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x * u_xlat5.x;\n    u_xlat1.y = _Glossiness;\n    u_xlat5.x = texture2D(unity_NHxRoughness, u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_3.xyz = u_xlat5.xxx * u_xlat16_3.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat1 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD5.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD5.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_WorldToLight[3];\n    u_xlat5.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat5.xy = u_xlat5.xy + vec2(0.5, 0.5);\n    u_xlat5.x = texture2D(_LightTexture0, u_xlat5.xy).w;\n    u_xlatb10 = 0.0<u_xlat1.z;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat15 = texture2D(_LightTextureB0, vec2(u_xlat15)).x;\n    u_xlat16_18 = (u_xlatb10) ? 1.0 : 0.0;\n    u_xlat16_18 = u_xlat5.x * u_xlat16_18;\n    u_xlat16_18 = u_xlat15 * u_xlat16_18;\n    u_xlat16_4.xyz = vec3(u_xlat16_18) * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform highp sampler2D _LightTextureB0;\nuniform highp samplerCube _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nfloat u_xlat10;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x * u_xlat5.x;\n    u_xlat1.y = _Glossiness;\n    u_xlat5.x = texture2D(unity_NHxRoughness, u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_3.xyz = u_xlat5.xxx * u_xlat16_3.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz + u_xlat5.xyz;\n    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat1.x = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat5.x = textureCube(_LightTexture0, u_xlat5.xyz).w;\n    u_xlat10 = texture2D(_LightTextureB0, u_xlat1.xx).x;\n    u_xlat5.x = u_xlat5.x * u_xlat10;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2 = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;\n    vs_TEXCOORD6.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x * u_xlat5.x;\n    u_xlat1.y = _Glossiness;\n    u_xlat5.x = texture2D(unity_NHxRoughness, u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_3.xyz = u_xlat5.xxx * u_xlat16_3.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xy = vs_TEXCOORD5.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD5.xx + u_xlat5.xy;\n    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD5.zz + u_xlat5.xy;\n    u_xlat5.xy = u_xlat5.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;\n    u_xlat5.x = texture2D(_LightTexture0, u_xlat5.xy).w;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;\n    vs_TEXCOORD6 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform highp sampler2D _ShadowMapTexture;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D _LightTextureB0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nlowp vec3 u_xlat10_4;\nmediump float u_xlat16_6;\nfloat u_xlat12;\nmediump float u_xlat16_14;\nvoid main()\n{\n    u_xlat0 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD5.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD5.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];\n    u_xlat1.xy = u_xlat0.xy / u_xlat0.ww;\n    u_xlat1.xy = u_xlat1.xy + vec2(0.5, 0.5);\n    u_xlat12 = texture2D(_LightTexture0, u_xlat1.xy).w;\n    u_xlatb1 = 0.0<u_xlat0.z;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture2D(_LightTextureB0, u_xlat0.xx).x;\n    u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;\n    u_xlat16_2.x = u_xlat12 * u_xlat16_2.x;\n    u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToShadow[0] * vs_TEXCOORD5.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToShadow[2] * vs_TEXCOORD5.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToShadow[3];\n    u_xlat0.xyz = u_xlat0.xyz / u_xlat0.www;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_6 = (u_xlatb0) ? _LightShadowData.x : 1.0;\n    u_xlat16_2.x = u_xlat16_6 * u_xlat16_2.x;\n    u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat16_2.xyz = vec3(u_xlat12) * u_xlat16_2.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat0.xyz = u_xlat0.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = _Glossiness;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz * u_xlat10_4.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat4.xyz = u_xlat10_4.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_14 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat4.xyz * vec3(u_xlat16_14) + u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2 = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nlowp float u_xlat10_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x * u_xlat5.x;\n    u_xlat1.y = _Glossiness;\n    u_xlat5.x = texture2D(unity_NHxRoughness, u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_3.xyz = u_xlat5.xxx * u_xlat16_3.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xy = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_5 = texture2D(_ShadowMapTexture, u_xlat5.xy).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_5) * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nbool u_xlatb2;\nvec4 u_xlat3;\nfloat u_xlat14;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    gl_Position = u_xlat1;\n    u_xlatb2 = _UVSec==0.0;\n    u_xlat2.xy = (bool(u_xlatb2)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat2.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat2.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat14 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat14 = inversesqrt(u_xlat14);\n    vs_TEXCOORD1.xyz = vec3(u_xlat14) * u_xlat3.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat3.xyz = (-u_xlat2.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat2.xyz;\n    u_xlat3.w = 0.0;\n    vs_TEXCOORD2 = u_xlat3.wwwx;\n    vs_TEXCOORD3 = u_xlat3.wwwy;\n    vs_TEXCOORD4.w = u_xlat3.z;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat14 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat14 = inversesqrt(u_xlat14);\n    vs_TEXCOORD4.xyz = vec3(u_xlat14) * u_xlat2.xyz;\n    u_xlat2.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat2.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;\n    vs_TEXCOORD6.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n    u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat1.zw;\n    vs_TEXCOORD7.xy = u_xlat0.zz + u_xlat0.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nvec2 u_xlat10;\nlowp float u_xlat10_10;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat5.x = u_xlat15 * u_xlat15;\n    u_xlat1.x = u_xlat5.x * u_xlat5.x;\n    u_xlat1.y = _Glossiness;\n    u_xlat5.x = texture2D(unity_NHxRoughness, u_xlat1.xy).x;\n    u_xlat5.x = u_xlat5.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_3.xyz = u_xlat5.xxx * u_xlat16_3.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_18) + u_xlat16_3.xyz;\n    u_xlat5.xy = vs_TEXCOORD5.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD5.xx + u_xlat5.xy;\n    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD5.zz + u_xlat5.xy;\n    u_xlat5.xy = u_xlat5.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;\n    u_xlat5.x = texture2D(_LightTexture0, u_xlat5.xy).w;\n    u_xlat10.xy = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_10 = texture2D(_ShadowMapTexture, u_xlat10.xy).x;\n    u_xlat5.x = u_xlat10_10 * u_xlat5.x;\n    u_xlat16_4.xyz = u_xlat5.xxx * _LightColor0.xyz;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nlowp vec3 u_xlat10_6;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat0.y = (-u_xlat0.x) + 1.0;\n    u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat1.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat2.xyz = u_xlat1.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat3.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat16_4.xyz = vec3(u_xlat18) * _LightColor0.xyz;\n    u_xlat12 = u_xlat12 * u_xlat12;\n    u_xlat0.x = u_xlat12 * u_xlat12;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_6.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_5.xyz = _Color.xyz * u_xlat10_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat6.xyz = u_xlat10_6.xyz * _Color.xyz;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_5.xyz = vec3(u_xlat10_1) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_22 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat0.xxx * u_xlat16_5.xyz;\n    u_xlat16_5.xyz = u_xlat6.xyz * vec3(u_xlat16_22) + u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;\n    vs_TEXCOORD6 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D _LightTextureB0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nlowp float u_xlat10_0;\nvec4 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nlowp float u_xlat10_6;\nbool u_xlatb6;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat0.y = (-u_xlat0.x) + 1.0;\n    u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat1.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat2.xyz = u_xlat1.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat3.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat12 = u_xlat12 * u_xlat12;\n    u_xlat0.x = u_xlat12 * u_xlat12;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat10_6 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_6) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_22 = (-u_xlat10_6) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = u_xlat1.xyz * vec3(u_xlat16_22) + u_xlat16_4.xyz;\n    u_xlat1 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD5.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD5.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_WorldToLight[3];\n    u_xlat0.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat0.xy = u_xlat0.xy + vec2(0.5, 0.5);\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xy).w;\n    u_xlatb6 = 0.0<u_xlat1.z;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = texture2D(_LightTextureB0, vec2(u_xlat12)).x;\n    u_xlat16_22 = (u_xlatb6) ? 1.0 : 0.0;\n    u_xlat16_22 = u_xlat0.x * u_xlat16_22;\n    u_xlat16_22 = u_xlat12 * u_xlat16_22;\n    u_xlat16_5.xyz = vec3(u_xlat16_22) * _LightColor0.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform highp sampler2D _LightTextureB0;\nuniform highp samplerCube _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat6;\nlowp float u_xlat10_6;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat0.y = (-u_xlat0.x) + 1.0;\n    u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat1.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat2.xyz = u_xlat1.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat3.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat12 = u_xlat12 * u_xlat12;\n    u_xlat0.x = u_xlat12 * u_xlat12;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat10_6 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_6) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_22 = (-u_xlat10_6) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = u_xlat1.xyz * vec3(u_xlat16_22) + u_xlat16_4.xyz;\n    u_xlat0.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat1.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = textureCube(_LightTexture0, u_xlat0.xyz).w;\n    u_xlat6 = texture2D(_LightTextureB0, u_xlat1.xx).x;\n    u_xlat0.x = u_xlat0.x * u_xlat6;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2 = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;\n    vs_TEXCOORD6.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nlowp float u_xlat10_6;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat0.y = (-u_xlat0.x) + 1.0;\n    u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat1.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat2.xyz = u_xlat1.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat3.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat12 = u_xlat12 * u_xlat12;\n    u_xlat0.x = u_xlat12 * u_xlat12;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat10_6 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_6) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_22 = (-u_xlat10_6) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = u_xlat1.xyz * vec3(u_xlat16_22) + u_xlat16_4.xyz;\n    u_xlat0.xy = vs_TEXCOORD5.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD5.xx + u_xlat0.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD5.zz + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xy).w;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nlowp float u_xlat10_6;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat0.y = (-u_xlat0.x) + 1.0;\n    u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat1.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat2.xyz = u_xlat1.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat3.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat12 = u_xlat12 * u_xlat12;\n    u_xlat0.x = u_xlat12 * u_xlat12;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat10_6 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_6) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_22 = (-u_xlat10_6) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = u_xlat1.xyz * vec3(u_xlat16_22) + u_xlat16_4.xyz;\n    u_xlat0.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xx).x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    vs_TEXCOORD1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    vs_TEXCOORD2.xyz = u_xlat1.xyz;\n    u_xlat2.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD2.w = u_xlat2.x;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat1.yzx * u_xlat0.zxy;\n    u_xlat16_3.xyz = u_xlat0.yzx * u_xlat1.zxy + (-u_xlat16_3.xyz);\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_3.xyz;\n    vs_TEXCOORD3.w = u_xlat2.y;\n    vs_TEXCOORD4.w = u_xlat2.z;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nlowp float u_xlat10_3;\nvec3 u_xlat4;\nlowp vec3 u_xlat10_4;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nmediump float u_xlat16_9;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_9 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_9 = min(u_xlat16_9, 1.0);\n    u_xlat16_9 = (-u_xlat16_9) + 1.0;\n    u_xlat16_9 = sqrt(u_xlat16_9);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_9) + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat4.x = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);\n    u_xlat16_1.xyz = u_xlat4.xxx * _LightColor0.xyz;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_8 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat8 = (-u_xlat10_8) + 1.0;\n    u_xlat0.y = (-u_xlat8) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_4.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat4.xyz = u_xlat10_4.xyz * _Color.xyz;\n    u_xlat10_3 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_2.xyz = vec3(u_xlat10_3) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_13 = (-u_xlat10_3) * 0.779083729 + 0.779083729;\n    u_xlat16_2.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat16_2.xyz = u_xlat4.xyz * vec3(u_xlat16_13) + u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    vs_TEXCOORD1.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat2.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat3.zxy;\n    u_xlat16_4.xyz = u_xlat3.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n    vs_TEXCOORD4.xyz = u_xlat3.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;\n    vs_TEXCOORD6 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D _LightTextureB0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat5;\nlowp float u_xlat10_10;\nbool u_xlatb10;\nmediump float u_xlat16_11;\nfloat u_xlat15;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_11 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_11 = min(u_xlat16_11, 1.0);\n    u_xlat16_11 = (-u_xlat16_11) + 1.0;\n    u_xlat16_11 = sqrt(u_xlat16_11);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_11) + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat5 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.y = (-u_xlat0.x) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat10_10 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.xyz = vec3(u_xlat10_10) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_16 = (-u_xlat10_10) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.xyz = u_xlat3.xyz * vec3(u_xlat16_16) + u_xlat16_1.xyz;\n    u_xlat2 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat2 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD5.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD5.zzzz + u_xlat2;\n    u_xlat2 = u_xlat2 + hlslcc_mtx4x4unity_WorldToLight[3];\n    u_xlat0.xz = u_xlat2.xy / u_xlat2.ww;\n    u_xlat0.xz = u_xlat0.xz + vec2(0.5, 0.5);\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xz).w;\n    u_xlatb10 = 0.0<u_xlat2.z;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = texture2D(_LightTextureB0, vec2(u_xlat15)).x;\n    u_xlat16_16 = (u_xlatb10) ? 1.0 : 0.0;\n    u_xlat16_16 = u_xlat0.x * u_xlat16_16;\n    u_xlat16_16 = u_xlat15 * u_xlat16_16;\n    u_xlat16_4.xyz = vec3(u_xlat16_16) * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat5) * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    vs_TEXCOORD1.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat2.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat3.zxy;\n    u_xlat16_4.xyz = u_xlat3.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n    vs_TEXCOORD4.xyz = u_xlat3.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTextureB0;\nuniform highp samplerCube _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nfloat u_xlat4;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nmediump float u_xlat16_9;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_9 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_9 = min(u_xlat16_9, 1.0);\n    u_xlat16_9 = (-u_xlat16_9) + 1.0;\n    u_xlat16_9 = sqrt(u_xlat16_9);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_9) + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat4 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.y = (-u_xlat0.x) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat10_8 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.xyz = vec3(u_xlat10_8) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_13 = (-u_xlat10_8) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.xyz = u_xlat3.xyz * vec3(u_xlat16_13) + u_xlat16_1.xyz;\n    u_xlat0.xzw = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xzw = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat0.xzw;\n    u_xlat0.xzw = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz + u_xlat0.xzw;\n    u_xlat0.xzw = u_xlat0.xzw + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat3.x = dot(u_xlat0.xzw, u_xlat0.xzw);\n    u_xlat0.x = textureCube(_LightTexture0, u_xlat0.xzw).w;\n    u_xlat8 = texture2D(_LightTextureB0, u_xlat3.xx).x;\n    u_xlat0.x = u_xlat0.x * u_xlat8;\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_2.xyz = vec3(u_xlat4) * u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    vs_TEXCOORD1.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = u_xlat3.x;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat1.zxy;\n    u_xlat16_4.xyz = u_xlat1.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat3.y;\n    vs_TEXCOORD4.w = u_xlat3.z;\n    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;\n    vs_TEXCOORD6.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nfloat u_xlat4;\nlowp float u_xlat10_8;\nmediump float u_xlat16_9;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_9 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_9 = min(u_xlat16_9, 1.0);\n    u_xlat16_9 = (-u_xlat16_9) + 1.0;\n    u_xlat16_9 = sqrt(u_xlat16_9);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_9) + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat4 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.y = (-u_xlat0.x) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat10_8 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.xyz = vec3(u_xlat10_8) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_13 = (-u_xlat10_8) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.xyz = u_xlat3.xyz * vec3(u_xlat16_13) + u_xlat16_1.xyz;\n    u_xlat0.xz = vs_TEXCOORD5.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xz = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD5.xx + u_xlat0.xz;\n    u_xlat0.xz = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD5.zz + u_xlat0.xz;\n    u_xlat0.xz = u_xlat0.xz + hlslcc_mtx4x4unity_WorldToLight[3].xy;\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xz).w;\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_2.xyz = vec3(u_xlat4) * u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;\n    vs_TEXCOORD6 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform highp sampler2D _ShadowMapTexture;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D _LightTextureB0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbool u_xlatb0;\nvec3 u_xlat1;\nlowp float u_xlat10_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nlowp vec3 u_xlat10_4;\nmediump float u_xlat16_6;\nfloat u_xlat8;\nlowp float u_xlat10_8;\nfloat u_xlat12;\nmediump float u_xlat16_14;\nvoid main()\n{\n    u_xlat0 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD5.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD5.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];\n    u_xlat1.xy = u_xlat0.xy / u_xlat0.ww;\n    u_xlat1.xy = u_xlat1.xy + vec2(0.5, 0.5);\n    u_xlat12 = texture2D(_LightTexture0, u_xlat1.xy).w;\n    u_xlatb1 = 0.0<u_xlat0.z;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat0.x = texture2D(_LightTextureB0, u_xlat0.xx).x;\n    u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;\n    u_xlat16_2.x = u_xlat12 * u_xlat16_2.x;\n    u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;\n    u_xlat0 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToShadow[0] * vs_TEXCOORD5.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToShadow[2] * vs_TEXCOORD5.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToShadow[3];\n    u_xlat0.xyz = u_xlat0.xyz / u_xlat0.www;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.z;\n    u_xlat16_6 = (u_xlatb0) ? _LightShadowData.x : 1.0;\n    u_xlat16_2.x = u_xlat16_6 * u_xlat16_2.x;\n    u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);\n    u_xlat16_2.xyz = vec3(u_xlat12) * u_xlat16_2.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat0.xyz = u_xlat0.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_8 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat8 = (-u_xlat10_8) + 1.0;\n    u_xlat0.y = (-u_xlat8) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_3.xyz = _Color.xyz * u_xlat10_4.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat4.xyz = u_xlat10_4.xyz * _Color.xyz;\n    u_xlat10_1 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_3.xyz = vec3(u_xlat10_1) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_14 = (-u_xlat10_1) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_3.xyz;\n    u_xlat16_3.xyz = u_xlat4.xyz * vec3(u_xlat16_14) + u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nfloat u_xlat10;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat2.w = 0.0;\n    vs_TEXCOORD2 = u_xlat2.wwwx;\n    vs_TEXCOORD3 = u_xlat2.wwwy;\n    vs_TEXCOORD4.w = u_xlat2.z;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    vs_TEXCOORD4.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nlowp float u_xlat10_6;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat0.y = (-u_xlat0.x) + 1.0;\n    u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat1.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat2.xyz = u_xlat1.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat3.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat12 = u_xlat12 * u_xlat12;\n    u_xlat0.x = u_xlat12 * u_xlat12;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat10_6 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_6) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_22 = (-u_xlat10_6) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = u_xlat1.xyz * vec3(u_xlat16_22) + u_xlat16_4.xyz;\n    u_xlat0.xy = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0 = texture2D(_ShadowMapTexture, u_xlat0.xy).x;\n    u_xlat16_5.xyz = vec3(u_xlat10_0) * _LightColor0.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nbool u_xlatb2;\nvec4 u_xlat3;\nfloat u_xlat14;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    gl_Position = u_xlat1;\n    u_xlatb2 = _UVSec==0.0;\n    u_xlat2.xy = (bool(u_xlatb2)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat2.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat2.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat14 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat14 = inversesqrt(u_xlat14);\n    vs_TEXCOORD1.xyz = vec3(u_xlat14) * u_xlat3.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat3.xyz = (-u_xlat2.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat2.xyz;\n    u_xlat3.w = 0.0;\n    vs_TEXCOORD2 = u_xlat3.wwwx;\n    vs_TEXCOORD3 = u_xlat3.wwwy;\n    vs_TEXCOORD4.w = u_xlat3.z;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat14 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat14 = inversesqrt(u_xlat14);\n    vs_TEXCOORD4.xyz = vec3(u_xlat14) * u_xlat2.xyz;\n    u_xlat2.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat2.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;\n    vs_TEXCOORD6.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n    u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat1.zw;\n    vs_TEXCOORD7.xy = u_xlat0.zz + u_xlat0.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nvec2 u_xlat6;\nlowp float u_xlat10_6;\nfloat u_xlat12;\nfloat u_xlat18;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0) + 1.0;\n    u_xlat0.y = (-u_xlat0.x) + 1.0;\n    u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;\n    u_xlat12 = dot((-vs_TEXCOORD1.xyz), u_xlat1.xyz);\n    u_xlat12 = u_xlat12 + u_xlat12;\n    u_xlat2.xyz = u_xlat1.xyz * (-vec3(u_xlat12)) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat12 = dot(u_xlat2.xyz, u_xlat3.xyz);\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat3.xyz);\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat12 = u_xlat12 * u_xlat12;\n    u_xlat0.x = u_xlat12 * u_xlat12;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat10_6 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_4.xyz = vec3(u_xlat10_6) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_22 = (-u_xlat10_6) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_4.xyz = u_xlat1.xyz * vec3(u_xlat16_22) + u_xlat16_4.xyz;\n    u_xlat0.xy = vs_TEXCOORD5.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD5.xx + u_xlat0.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD5.zz + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xy).w;\n    u_xlat6.xy = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_6 = texture2D(_ShadowMapTexture, u_xlat6.xy).x;\n    u_xlat0.x = u_xlat10_6 * u_xlat0.x;\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_5.xyz = vec3(u_xlat18) * u_xlat16_5.xyz;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_5.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    vs_TEXCOORD1.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat2.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat3.zxy;\n    u_xlat16_4.xyz = u_xlat3.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n    vs_TEXCOORD4.xyz = u_xlat3.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nfloat u_xlat4;\nlowp float u_xlat10_8;\nmediump float u_xlat16_9;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_9 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_9 = min(u_xlat16_9, 1.0);\n    u_xlat16_9 = (-u_xlat16_9) + 1.0;\n    u_xlat16_9 = sqrt(u_xlat16_9);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_9) + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat4 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.y = (-u_xlat0.x) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat10_8 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.xyz = vec3(u_xlat10_8) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_13 = (-u_xlat10_8) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.xyz = u_xlat3.xyz * vec3(u_xlat16_13) + u_xlat16_1.xyz;\n    u_xlat0.xzw = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xzw = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat0.xzw;\n    u_xlat0.xzw = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz + u_xlat0.xzw;\n    u_xlat0.xzw = u_xlat0.xzw + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat0.x = dot(u_xlat0.xzw, u_xlat0.xzw);\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xx).x;\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_2.xyz = vec3(u_xlat4) * u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    vs_TEXCOORD1.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat1.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat2.xyz = u_xlat1.xxx * u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat3.zxy;\n    u_xlat16_4.xyz = u_xlat3.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n    vs_TEXCOORD4.xyz = u_xlat3.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;\n    vs_TEXCOORD6 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToShadow[16];\nuniform \tmediump vec4 _LightShadowData;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _ShadowMapTexture;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D _LightTextureB0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec2 u_xlat10_0;\nbool u_xlatb0;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat5;\nlowp float u_xlat10_10;\nbool u_xlatb10;\nmediump float u_xlat16_11;\nfloat u_xlat15;\nmediump float u_xlat16_16;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_11 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_11 = min(u_xlat16_11, 1.0);\n    u_xlat16_11 = (-u_xlat16_11) + 1.0;\n    u_xlat16_11 = sqrt(u_xlat16_11);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_11) + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat5 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.y = (-u_xlat0.x) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat10_10 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.xyz = vec3(u_xlat10_10) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_16 = (-u_xlat10_10) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.xyz = u_xlat3.xyz * vec3(u_xlat16_16) + u_xlat16_1.xyz;\n    u_xlat2 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat2 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD5.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD5.zzzz + u_xlat2;\n    u_xlat2 = u_xlat2 + hlslcc_mtx4x4unity_WorldToLight[3];\n    u_xlat0.xz = u_xlat2.xy / u_xlat2.ww;\n    u_xlat0.xz = u_xlat0.xz + vec2(0.5, 0.5);\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xz).w;\n    u_xlatb10 = 0.0<u_xlat2.z;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = texture2D(_LightTextureB0, vec2(u_xlat15)).x;\n    u_xlat16_16 = (u_xlatb10) ? 1.0 : 0.0;\n    u_xlat16_16 = u_xlat0.x * u_xlat16_16;\n    u_xlat16_16 = u_xlat15 * u_xlat16_16;\n    u_xlat2 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];\n    u_xlat2 = hlslcc_mtx4x4unity_WorldToShadow[0] * vs_TEXCOORD5.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_WorldToShadow[2] * vs_TEXCOORD5.zzzz + u_xlat2;\n    u_xlat2 = u_xlat2 + hlslcc_mtx4x4unity_WorldToShadow[3];\n    u_xlat0.xzw = u_xlat2.xyz / u_xlat2.www;\n    u_xlat0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlatb0 = u_xlat0.x<u_xlat0.w;\n    u_xlat16_4.x = (u_xlatb0) ? _LightShadowData.x : 1.0;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_4.x;\n    u_xlat16_4.xyz = vec3(u_xlat16_16) * _LightColor0.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat5) * u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nbool u_xlatb1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nfloat u_xlat16;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlatb1 = _UVSec==0.0;\n    u_xlat1.xy = (bool(u_xlatb1)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat1.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat1.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat1.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    vs_TEXCOORD1.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    vs_TEXCOORD2.xyz = u_xlat2.xyz;\n    u_xlat3.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    vs_TEXCOORD2.w = u_xlat3.x;\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat16_4.xyz = u_xlat2.yzx * u_xlat1.zxy;\n    u_xlat16_4.xyz = u_xlat1.yzx * u_xlat2.zxy + (-u_xlat16_4.xyz);\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    u_xlat1.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_4.xyz = u_xlat1.xxx * u_xlat16_4.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_4.xyz;\n    vs_TEXCOORD3.w = u_xlat3.y;\n    vs_TEXCOORD4.w = u_xlat3.z;\n    u_xlat0.y = u_xlat0.y * _ProjectionParams.x;\n    u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat0.zw;\n    vs_TEXCOORD7.xy = u_xlat1.zz + u_xlat1.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nfloat u_xlat4;\nlowp float u_xlat10_8;\nmediump float u_xlat16_9;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_9 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_9 = min(u_xlat16_9, 1.0);\n    u_xlat16_9 = (-u_xlat16_9) + 1.0;\n    u_xlat16_9 = sqrt(u_xlat16_9);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_9) + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat4 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.y = (-u_xlat0.x) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat10_8 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.xyz = vec3(u_xlat10_8) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_13 = (-u_xlat10_8) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.xyz = u_xlat3.xyz * vec3(u_xlat16_13) + u_xlat16_1.xyz;\n    u_xlat0.xz = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_0.x = texture2D(_ShadowMapTexture, u_xlat0.xz).x;\n    u_xlat16_2.xyz = u_xlat10_0.xxx * _LightColor0.xyz;\n    u_xlat16_2.xyz = vec3(u_xlat4) * u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ProjectionParams;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nattribute mediump vec4 in_TANGENT0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat20;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    gl_Position = u_xlat1;\n    u_xlatb2 = _UVSec==0.0;\n    u_xlat2.xy = (bool(u_xlatb2)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat2.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat2.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat2.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat20 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat20 = inversesqrt(u_xlat20);\n    vs_TEXCOORD1.xyz = vec3(u_xlat20) * u_xlat3.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat3.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_TANGENT0.xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_TANGENT0.zzz + u_xlat3.xyz;\n    u_xlat20 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat20 = inversesqrt(u_xlat20);\n    u_xlat3.xyz = vec3(u_xlat20) * u_xlat3.xyz;\n    vs_TEXCOORD2.xyz = u_xlat3.xyz;\n    u_xlat4.xyz = (-u_xlat2.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat2.xyz;\n    vs_TEXCOORD2.w = u_xlat4.x;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat20 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat20 = inversesqrt(u_xlat20);\n    u_xlat2.xyz = vec3(u_xlat20) * u_xlat2.xyz;\n    u_xlat16_5.xyz = u_xlat3.yzx * u_xlat2.zxy;\n    u_xlat16_5.xyz = u_xlat2.yzx * u_xlat3.zxy + (-u_xlat16_5.xyz);\n    vs_TEXCOORD4.xyz = u_xlat2.xyz;\n    u_xlat2.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat16_5.xyz = u_xlat2.xxx * u_xlat16_5.xyz;\n    vs_TEXCOORD3.xyz = u_xlat16_5.xyz;\n    vs_TEXCOORD3.w = u_xlat4.y;\n    vs_TEXCOORD4.w = u_xlat4.z;\n    u_xlat2.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat2.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;\n    vs_TEXCOORD6.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;\n    u_xlat0.x = u_xlat1.y * _ProjectionParams.x;\n    u_xlat0.w = u_xlat0.x * 0.5;\n    u_xlat0.xz = u_xlat1.xw * vec2(0.5, 0.5);\n    vs_TEXCOORD7.zw = u_xlat1.zw;\n    vs_TEXCOORD7.xy = u_xlat0.zz + u_xlat0.xw;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _BumpScale;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MetallicGlossMap;\nuniform lowp sampler2D _SpecGlossMap;\nuniform lowp sampler2D _BumpMap;\nuniform lowp sampler2D _ShadowMapTexture;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec2 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec3 u_xlat10_3;\nfloat u_xlat4;\nvec2 u_xlat8;\nlowp float u_xlat10_8;\nmediump float u_xlat16_9;\nmediump float u_xlat16_13;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.xy).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_9 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_1.xy = u_xlat16_1.xy * vec2(_BumpScale);\n    u_xlat16_9 = min(u_xlat16_9, 1.0);\n    u_xlat16_9 = (-u_xlat16_9) + 1.0;\n    u_xlat16_9 = sqrt(u_xlat16_9);\n    u_xlat16_2.xyz = u_xlat16_1.yyy * vs_TEXCOORD3.xyz;\n    u_xlat16_1.xyw = vs_TEXCOORD2.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    u_xlat16_1.xyz = vs_TEXCOORD4.xyz * vec3(u_xlat16_9) + u_xlat16_1.xyw;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat16_1.xyz);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat0.xyz = u_xlat16_1.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat3.x = vs_TEXCOORD2.w;\n    u_xlat3.y = vs_TEXCOORD3.w;\n    u_xlat3.z = vs_TEXCOORD4.w;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);\n    u_xlat4 = dot(u_xlat16_1.xyz, u_xlat3.xyz);\n    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat3.x = u_xlat0.x * u_xlat0.x;\n    u_xlat10_0.x = texture2D(_SpecGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat0.x = (-u_xlat10_0.x) + 1.0;\n    u_xlat3.y = (-u_xlat0.x) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = _Color.xyz * u_xlat10_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat3.xyz = u_xlat10_3.xyz * _Color.xyz;\n    u_xlat10_8 = texture2D(_MetallicGlossMap, vs_TEXCOORD0.xy).x;\n    u_xlat16_1.xyz = vec3(u_xlat10_8) * u_xlat16_1.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_13 = (-u_xlat10_8) * 0.779083729 + 0.779083729;\n    u_xlat16_1.xyz = u_xlat0.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.xyz = u_xlat3.xyz * vec3(u_xlat16_13) + u_xlat16_1.xyz;\n    u_xlat0.xz = vs_TEXCOORD5.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xz = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD5.xx + u_xlat0.xz;\n    u_xlat0.xz = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD5.zz + u_xlat0.xz;\n    u_xlat0.xz = u_xlat0.xz + hlslcc_mtx4x4unity_WorldToLight[3].xy;\n    u_xlat0.x = texture2D(_LightTexture0, u_xlat0.xz).w;\n    u_xlat8.xy = vs_TEXCOORD7.xy / vs_TEXCOORD7.ww;\n    u_xlat10_8 = texture2D(_ShadowMapTexture, u_xlat8.xy).x;\n    u_xlat0.x = u_xlat10_8 * u_xlat0.x;\n    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_2.xyz = vec3(u_xlat4) * u_xlat16_2.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat6;\nfloat u_xlat9;\nbool u_xlatb9;\nvoid main()\n{\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    u_xlat9 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat9 = (-u_xlat9) * u_xlat9 + 1.0;\n    u_xlat9 = sqrt(u_xlat9);\n    u_xlat9 = u_xlat9 * unity_LightShadowBias.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) + u_xlat1.xyz;\n    u_xlatb9 = unity_LightShadowBias.z!=0.0;\n    u_xlat0.xyz = (bool(u_xlatb9)) ? u_xlat0.xyz : u_xlat1.xyz;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat1.x = unity_LightShadowBias.x / u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat6 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat6);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat6) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat6;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\n#define SV_Target0 gl_FragData[0]\nvoid main()\n{\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","#version 100\n\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat6;\nfloat u_xlat9;\nbool u_xlatb9;\nvoid main()\n{\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat2.xyz = (-u_xlat1.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    u_xlat9 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat9 = (-u_xlat9) * u_xlat9 + 1.0;\n    u_xlat9 = sqrt(u_xlat9);\n    u_xlat9 = u_xlat9 * unity_LightShadowBias.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) * vec3(u_xlat9) + u_xlat1.xyz;\n    u_xlatb9 = unity_LightShadowBias.z!=0.0;\n    u_xlat0.xyz = (bool(u_xlatb9)) ? u_xlat0.xyz : u_xlat1.xyz;\n    u_xlat2 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat2;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    u_xlat1.x = unity_LightShadowBias.x / u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat6 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat6);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat6) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat6;\n    return;\n}\n\n","#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\n#define SV_Target0 gl_FragData[0]\nvoid main()\n{\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n"]